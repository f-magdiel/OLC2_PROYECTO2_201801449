
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS AND AS BARRAS BOOL BREAK CADENA CAPACITY CARACTER CHAR CLONE COMA CONTAINS CONTINUE CORDER CORIZQ DECIMAL DIVIDIDO DOSPT ELSE ENTERO F64 FALSE FN FOR GUIONB I64 ID IF IGUAL IGUALQUE IN INSERT LEN LET LLAVEDER LLAVEIZQ LOOP MAIN MAS MATCH MAYORIQUE MAYORQUE MENORIQUE MENORQUE MENOS MODULO MUT NEW NOIGUALQUE NOT OR PARDER PARIZQ POR POW POWF PRINTLN PTCOMA PTO PUSH REMOVE RETURN SIGNOI SQRT STR STRING TOOWNED TOSTRING TRUE USIZE VEC VVEC WHILE WITH_CAPACITYinicio : instruccionesinstrucciones : instruccioninstruccion : imprimirimprimir : PRINTLN NOT PARIZQ expresion PARDER PTCOMAexpresion : CADENA'
    
_lr_action_items = {'PRINTLN':([0,],[5,]),'$end':([1,2,3,4,11,],[0,-1,-2,-3,-4,]),'NOT':([5,],[6,]),'PARIZQ':([6,],[7,]),'CADENA':([7,],[9,]),'PARDER':([8,9,],[10,-5,]),'PTCOMA':([10,],[11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,],[3,]),'imprimir':([0,],[4,]),'expresion':([7,],[8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','Sintactico.py',113),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones2','Sintactico.py',125),
  ('instruccion -> imprimir','instruccion',1,'p_instrucion','Sintactico.py',132),
  ('imprimir -> PRINTLN NOT PARIZQ expresion PARDER PTCOMA','imprimir',6,'p_imprimir2','Sintactico.py',346),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena1','Sintactico.py',639),
]
