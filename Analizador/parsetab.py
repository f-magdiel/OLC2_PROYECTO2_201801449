
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALQUENOIGUALQUEMENORQUEMENORIQUEMAYORQUEMAYORIQUEleftMASMENOSleftDIVIDIDOPORMODULOleftASrightUMENOSNOTnonassocPTOABS AND AS BARRAS BOOL BREAK CADENA CAPACITY CARACTER CHAR CLONE COMA CONTAINS CONTINUE CORDER CORIZQ DDOSPT DECIMAL DIVIDIDO DOSPT ELSE ENTERO F64 FALSE FN FOR GUIONB I64 ID IF IGUAL IGUALQUE IN INSERT LEN LET LLAVEDER LLAVEIZQ LOOP MAIN MAS MATCH MAYORIQUE MAYORQUE MENORIQUE MENORQUE MENOS MODULO MUT NEW NOIGUALQUE NOT OR PARDER PARIZQ POR POW POWF PRINTLN PTCOMA PTO PUSH REMOVE RETURN SIGNOI SQRT STR STRING TOOWNED TOSTRING TRUE USIZE VEC VVEC WHILE WITH_CAPACITYinicio : instrucciones main instruccionesmain : FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDERinstrucciones : instrucciones instruccioninstrucciones : instruccioninstrucciones : instruccion : imprimir PTCOMA\n                    | if\n                    | while\n                    | continue PTCOMA\n                    | break PTCOMA\n                    | loop\n                    | match\n                    | declaracion PTCOMA\n                    | asignacion PTCOMA\n                    | forin\n                                        expresion : VEC NOT CORIZQ expresiones CORDERexpresion : VEC NOT CORIZQ expresion PTCOMA expresion CORDERexpresion : VVEC DDOSPT NEW PARIZQ PARDERexpresion : VVEC DDOSPT WITH_CAPACITY PARIZQ expresion PARDERexpresion : nativas_vecnativas_vec : expresion PTO LEN PARIZQ PARDERnativas_vec : expresion PTO CAPACITY PARIZQ PARDER nativas_vec : expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDERimprimir : PRINTLN NOT PARIZQ expresiones PARDERdeclaracion : LET MUT ID DOSPT tipo IGUAL expresion declaracion : LET MUT ID IGUAL expresiondeclaracion : LET ID DOSPT tipo IGUAL expresion declaracion : LET ID IGUAL expresion asignacion : ID IGUAL expresionasignacion : ID indices IGUAL expresionindices : indices indiceindices : indiceindice : CORIZQ expresion CORDERif : IF expresion LLAVEIZQ instrucciones LLAVEDER if : IF expresion LLAVEIZQ instrucciones LLAVEDER elseif : IF expresion LLAVEIZQ instrucciones LLAVEDER lelseifif : IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif elselelseif : lelseif elseiflelseif : elseifelseif : ELSE IF expresion LLAVEIZQ instrucciones LLAVEDERelse : ELSE LLAVEIZQ instrucciones LLAVEDERmatch : MATCH expresion LLAVEIZQ brazos LLAVEDERbrazos : brazos brazobrazos : brazobrazo : coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDERbrazo : coincidencias IGUAL MAYORQUE instr_match COMAcoincidencias : coincidencias BARRAS coincidenciacoincidencias : coincidenciacoincidencia : expresioncoincidencia : GUIONBinstr_match : imprimir\n                   | if\n                   | while\n                   | break\n                   | continue\n                   | loop\n                   | match\n                   | declaracion\n                   | asignacion\n                   | forin\n                                loop : LOOP LLAVEIZQ instrucciones LLAVEDERwhile : WHILE expresion LLAVEIZQ instrucciones LLAVEDERforin : FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDERforin : FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDERbreak : BREAKcontinue : CONTINUEtipo : I64\n            | F64\n            | BOOL\n            | CHAR\n            | STRING\n            | USIZE\n     expresiones : expresiones COMA expresionexpresiones : expresionexpresiones : expresion : ENTEROexpresion : DECIMALexpresion : TRUEexpresion : FALSEexpresion : tostring\n                | toownedtostring : expresion PTO TOSTRING PARIZQ PARDER toowned : expresion PTO TOOWNED PARIZQ PARDER expresion : CADENAexpresion : CARACTERexpresion : expresion MAS expresion\n                    | expresion MENOS expresion\n                    | expresion POR expresion\n                    | expresion DIVIDIDO expresion\n                    | expresion MODULO expresionexpresion : MENOS expresion %prec UMENOS\n                | NOT expresionexpresion : I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER\n                | F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDERexpresion : expresion IGUALQUE expresion\n            | expresion NOIGUALQUE expresion\n            | expresion MENORQUE expresion\n            | expresion MAYORQUE expresion\n            | expresion MENORIQUE expresion\n            | expresion MAYORIQUE expresion expresion : expresion OR expresion\n                | expresion AND expresion\n                expresion : PARIZQ expresion PARDERexpresion : CORIZQ expresiones CORDER expresion : CORIZQ expresion PTCOMA expresion CORDERexpresion : PARIZQ expresion AS tipo PARDERexpresion : nativas_fun nativas_fun : expresion PTO ABS PARIZQ PARDER\n                    | expresion PTO SQRT PARIZQ PARDERnativas_fun : expresion PTO CLONE PARIZQ PARDERexpresion : IDexpresion : ID a_indicesa_indices : a_indices a_indicea_indices : a_indicea_indice : CORIZQ expresion CORDER'
    
_lr_action_items = {'FN':([0,2,3,5,6,9,10,13,25,27,28,29,30,31,142,164,183,184,194,195,197,221,222,243,255,262,263,],[-5,26,-4,-7,-8,-11,-12,-15,-3,-6,-9,-10,-13,-14,-61,-34,-62,-42,-35,-36,-39,-37,-38,-63,-41,-64,-40,]),'PRINTLN':([0,2,3,5,6,9,10,13,24,25,27,28,29,30,31,54,63,66,93,94,107,141,142,164,183,184,191,193,194,195,197,214,218,220,221,222,223,230,243,245,246,252,254,255,256,260,261,262,263,],[14,14,-4,-7,-8,-11,-12,-15,14,-3,-6,-9,-10,-13,-14,14,14,14,14,14,14,14,-61,-34,-62,-42,14,14,-35,-36,-39,14,14,14,-37,-38,14,14,-63,-2,14,14,14,-41,14,14,14,-64,-40,]),'IF':([0,2,3,5,6,9,10,13,24,25,27,28,29,30,31,54,63,66,93,94,107,141,142,164,183,184,191,193,194,195,196,197,214,218,220,221,222,223,230,243,245,246,252,254,255,256,260,261,262,263,],[15,15,-4,-7,-8,-11,-12,-15,15,-3,-6,-9,-10,-13,-14,15,15,15,15,15,15,15,-61,-34,-62,-42,15,15,-35,-36,224,-39,15,15,15,-37,-38,15,15,-63,-2,15,15,15,-41,15,15,15,-64,-40,]),'WHILE':([0,2,3,5,6,9,10,13,24,25,27,28,29,30,31,54,63,66,93,94,107,141,142,164,183,184,191,193,194,195,197,214,218,220,221,222,223,230,243,245,246,252,254,255,256,260,261,262,263,],[16,16,-4,-7,-8,-11,-12,-15,16,-3,-6,-9,-10,-13,-14,16,16,16,16,16,16,16,-61,-34,-62,-42,16,16,-35,-36,-39,16,16,16,-37,-38,16,16,-63,-2,16,16,16,-41,16,16,16,-64,-40,]),'CONTINUE':([0,2,3,5,6,9,10,13,24,25,27,28,29,30,31,54,63,66,93,94,107,141,142,164,183,184,191,193,194,195,197,214,218,220,221,222,223,230,243,245,246,252,254,255,256,260,261,262,263,],[17,17,-4,-7,-8,-11,-12,-15,17,-3,-6,-9,-10,-13,-14,17,17,17,17,17,17,17,-61,-34,-62,-42,17,17,-35,-36,-39,17,17,17,-37,-38,17,17,-63,-2,17,17,17,-41,17,17,17,-64,-40,]),'BREAK':([0,2,3,5,6,9,10,13,24,25,27,28,29,30,31,54,63,66,93,94,107,141,142,164,183,184,191,193,194,195,197,214,218,220,221,222,223,230,243,245,246,252,254,255,256,260,261,262,263,],[18,18,-4,-7,-8,-11,-12,-15,18,-3,-6,-9,-10,-13,-14,18,18,18,18,18,18,18,-61,-34,-62,-42,18,18,-35,-36,-39,18,18,18,-37,-38,18,18,-63,-2,18,18,18,-41,18,18,18,-64,-40,]),'LOOP':([0,2,3,5,6,9,10,13,24,25,27,28,29,30,31,54,63,66,93,94,107,141,142,164,183,184,191,193,194,195,197,214,218,220,221,222,223,230,243,245,246,252,254,255,256,260,261,262,263,],[19,19,-4,-7,-8,-11,-12,-15,19,-3,-6,-9,-10,-13,-14,19,19,19,19,19,19,19,-61,-34,-62,-42,19,19,-35,-36,-39,19,19,19,-37,-38,19,19,-63,-2,19,19,19,-41,19,19,19,-64,-40,]),'MATCH':([0,2,3,5,6,9,10,13,24,25,27,28,29,30,31,54,63,66,93,94,107,141,142,164,183,184,191,193,194,195,197,214,218,220,221,222,223,230,243,245,246,252,254,255,256,260,261,262,263,],[20,20,-4,-7,-8,-11,-12,-15,20,-3,-6,-9,-10,-13,-14,20,20,20,20,20,20,20,-61,-34,-62,-42,20,20,-35,-36,-39,20,20,20,-37,-38,20,20,-63,-2,20,20,20,-41,20,20,20,-64,-40,]),'LET':([0,2,3,5,6,9,10,13,24,25,27,28,29,30,31,54,63,66,93,94,107,141,142,164,183,184,191,193,194,195,197,214,218,220,221,222,223,230,243,245,246,252,254,255,256,260,261,262,263,],[21,21,-4,-7,-8,-11,-12,-15,21,-3,-6,-9,-10,-13,-14,21,21,21,21,21,21,21,-61,-34,-62,-42,21,21,-35,-36,-39,21,21,21,-37,-38,21,21,-63,-2,21,21,21,-41,21,21,21,-64,-40,]),'ID':([0,2,3,5,6,9,10,13,15,16,20,21,23,24,25,27,28,29,30,31,35,36,38,48,54,56,58,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,92,93,94,95,98,100,103,107,129,131,132,141,142,144,145,150,164,178,180,181,183,184,185,187,190,191,193,194,195,197,200,207,214,216,218,219,220,221,222,223,224,228,229,230,243,245,246,252,253,254,255,256,259,260,261,262,263,],[22,22,-4,-7,-8,-11,-12,-15,52,52,52,57,62,22,-3,-6,-9,-10,-13,-14,52,52,52,52,22,96,52,52,22,52,22,52,52,52,52,52,52,52,52,52,52,52,52,52,52,22,22,52,52,52,52,22,52,52,52,22,-61,52,-44,52,-34,52,52,52,-62,-42,-43,52,52,22,22,-35,-36,-39,52,52,22,52,22,52,22,-37,-38,22,52,52,52,22,-63,-2,22,22,-46,22,-41,22,-45,22,22,-64,-40,]),'FOR':([0,2,3,5,6,9,10,13,24,25,27,28,29,30,31,54,63,66,93,94,107,141,142,164,183,184,191,193,194,195,197,214,218,220,221,222,223,230,243,245,246,252,254,255,256,260,261,262,263,],[23,23,-4,-7,-8,-11,-12,-15,23,-3,-6,-9,-10,-13,-14,23,23,23,23,23,23,23,-61,-34,-62,-42,23,23,-35,-36,-39,23,23,23,-37,-38,23,23,-63,-2,23,23,23,-41,23,23,23,-64,-40,]),'$end':([1,3,5,6,9,10,13,24,25,27,28,29,30,31,63,142,164,183,184,194,195,197,221,222,243,245,255,262,263,],[0,-4,-7,-8,-11,-12,-15,-5,-3,-6,-9,-10,-13,-14,-1,-61,-34,-62,-42,-35,-36,-39,-37,-38,-63,-2,-41,-64,-40,]),'LLAVEDER':([3,5,6,9,10,13,25,27,28,29,30,31,54,66,93,94,107,141,142,144,145,164,183,184,185,191,193,194,195,197,218,220,221,222,223,230,243,246,252,253,254,255,256,259,260,261,262,263,],[-4,-7,-8,-11,-12,-15,-3,-6,-9,-10,-13,-14,-5,-5,-5,142,164,183,-61,184,-44,-34,-62,-42,-43,-5,-5,-35,-36,-39,243,245,-37,-38,-5,-5,-63,255,259,-46,-5,-41,-5,-45,262,263,-64,-40,]),'PTCOMA':([4,7,8,11,12,17,18,39,40,41,42,43,44,45,46,47,51,52,82,84,87,90,91,99,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,158,159,163,174,182,189,198,199,201,202,203,204,205,206,208,209,211,217,227,242,248,249,257,258,],[27,28,29,30,31,-66,-65,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,-92,132,-91,-112,-114,-29,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,-101,-102,-104,-103,-113,-28,-30,-24,207,-115,-26,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,-106,-27,-19,-25,-23,-17,-93,-94,]),'NOT':([14,15,16,20,34,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[32,35,35,35,81,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-44,35,35,35,35,-43,35,35,35,35,35,35,35,35,35,-46,-45,]),'VEC':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-44,34,34,34,34,-43,34,34,34,34,34,34,34,34,34,-46,-45,]),'VVEC':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-44,37,37,37,37,-43,37,37,37,37,37,37,37,37,37,-46,-45,]),'ENTERO':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-44,40,40,40,40,-43,40,40,40,40,40,40,40,40,40,-46,-45,]),'DECIMAL':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-44,41,41,41,41,-43,41,41,41,41,41,41,41,41,41,-46,-45,]),'TRUE':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-44,42,42,42,42,-43,42,42,42,42,42,42,42,42,42,-46,-45,]),'FALSE':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-44,43,43,43,43,-43,43,43,43,43,43,43,43,43,43,-46,-45,]),'CADENA':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-44,46,46,46,46,-43,46,46,46,46,46,46,46,46,46,-46,-45,]),'CARACTER':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-44,47,47,47,47,-43,47,47,47,47,47,47,47,47,47,-46,-45,]),'MENOS':([15,16,20,33,35,36,38,39,40,41,42,43,44,45,46,47,48,51,52,53,55,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,84,86,87,90,91,92,95,98,99,100,102,103,106,108,109,110,111,112,113,114,115,116,117,118,119,120,129,130,131,132,135,139,140,143,144,145,150,158,159,161,174,175,176,178,180,181,182,185,187,189,190,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,217,219,224,225,226,227,228,229,242,244,247,248,249,250,251,253,257,258,259,],[48,48,48,68,48,48,48,-20,-76,-77,-78,-79,-80,-81,-84,-85,48,-107,-111,68,68,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-92,68,68,-91,-112,-114,48,48,48,68,48,68,48,68,-86,-87,-88,-89,-90,68,68,68,68,68,68,68,68,48,-104,48,48,-103,-113,68,68,48,-44,48,68,68,68,68,68,68,48,48,48,-115,-43,48,68,48,-21,-22,48,-82,-83,-108,-109,-110,-16,48,-105,-18,68,-106,68,68,48,68,48,48,68,68,-19,48,48,68,68,68,-23,-17,68,68,-46,-93,-94,-45,]),'I64':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,97,98,100,103,129,131,132,136,144,145,149,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,152,49,49,49,49,49,49,152,49,-44,152,49,49,49,49,-43,49,49,49,49,49,49,49,49,49,-46,-45,]),'F64':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,97,98,100,103,129,131,132,136,144,145,149,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,153,50,50,50,50,50,50,153,50,-44,153,50,50,50,50,-43,50,50,50,50,50,50,50,50,50,-46,-45,]),'PARIZQ':([15,16,20,32,35,36,38,48,58,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,144,145,150,178,180,181,185,187,190,200,207,216,219,224,228,229,253,259,],[38,38,38,65,38,38,38,38,38,38,104,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,165,166,167,168,169,170,171,172,38,38,38,177,178,180,181,38,-44,38,38,38,38,-43,38,38,38,38,38,38,38,38,38,-46,-45,]),'CORIZQ':([15,16,20,22,35,36,38,48,52,58,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,90,91,92,95,98,100,101,103,129,131,132,139,144,145,150,160,178,180,181,182,185,187,190,200,207,216,219,224,228,229,253,259,],[36,36,36,61,36,36,36,36,92,36,61,-32,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,129,92,-114,36,36,36,36,-31,36,36,36,36,-113,36,-44,36,-33,36,36,36,-115,-43,36,36,36,36,36,36,36,36,36,-46,-45,]),'COMA':([17,18,36,39,40,41,42,43,44,45,46,47,51,52,65,82,83,84,87,90,91,99,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,129,130,135,139,142,158,159,163,164,173,174,175,182,183,184,189,194,195,197,198,199,201,202,203,204,205,206,208,209,211,212,213,217,221,222,227,231,232,233,234,235,236,237,238,239,240,241,242,243,248,249,255,257,258,262,263,],[-66,-65,-75,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,-75,-92,131,-74,-91,-112,-114,-29,131,-74,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,-101,-102,-75,-104,-103,-113,-61,-28,-30,-24,-34,131,-74,-73,-115,-62,-42,-26,-35,-36,-39,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,-106,228,229,-27,-37,-38,-19,253,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-25,-63,-23,-17,-41,-93,-94,-64,-40,]),'LLAVEIZQ':([19,33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,87,90,91,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,161,162,182,196,198,199,201,202,203,204,205,206,208,209,211,214,227,244,247,248,249,257,258,],[54,66,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,93,95,-92,-91,-112,-114,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,-101,-102,-104,-103,-113,191,193,-115,223,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,-106,230,-19,254,256,-23,-17,-93,-94,]),'MUT':([21,],[56,]),'IGUAL':([22,39,40,41,42,43,44,45,46,47,51,52,57,59,60,82,87,90,91,96,101,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,143,146,147,148,151,152,153,154,155,156,157,160,182,188,198,199,201,202,203,204,205,206,208,209,211,215,227,248,249,257,258,],[58,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,98,100,-32,-92,-91,-112,-114,150,-31,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,-101,-102,-104,-103,-113,-49,186,-48,-50,190,-67,-68,-69,-70,-71,-72,-33,-115,216,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,-106,-47,-19,-23,-17,-93,-94,]),'MAIN':([26,],[64,]),'MAS':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[67,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,67,67,-92,67,67,-91,-112,-114,67,67,67,-86,-87,-88,-89,-90,67,67,67,67,67,67,67,67,-104,-103,-113,67,67,67,67,67,67,67,67,-115,67,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,67,-106,67,67,67,67,67,-19,67,67,67,-23,-17,67,67,-93,-94,]),'POR':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[69,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,69,69,-92,69,69,-91,-112,-114,69,69,69,69,69,-88,-89,-90,69,69,69,69,69,69,69,69,-104,-103,-113,69,69,69,69,69,69,69,69,-115,69,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,69,-106,69,69,69,69,69,-19,69,69,69,-23,-17,69,69,-93,-94,]),'DIVIDIDO':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[70,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,70,70,-92,70,70,-91,-112,-114,70,70,70,70,70,-88,-89,-90,70,70,70,70,70,70,70,70,-104,-103,-113,70,70,70,70,70,70,70,70,-115,70,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,70,-106,70,70,70,70,70,-19,70,70,70,-23,-17,70,70,-93,-94,]),'MODULO':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[71,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,71,71,-92,71,71,-91,-112,-114,71,71,71,71,71,-88,-89,-90,71,71,71,71,71,71,71,71,-104,-103,-113,71,71,71,71,71,71,71,71,-115,71,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,71,-106,71,71,71,71,71,-19,71,71,71,-23,-17,71,71,-93,-94,]),'IGUALQUE':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[72,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,72,72,-92,72,72,-91,-112,-114,72,72,72,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,72,72,-104,-103,-113,72,72,72,72,72,72,72,72,-115,72,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,72,-106,72,72,72,72,72,-19,72,72,72,-23,-17,72,72,-93,-94,]),'NOIGUALQUE':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[73,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,73,73,-92,73,73,-91,-112,-114,73,73,73,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,73,73,-104,-103,-113,73,73,73,73,73,73,73,73,-115,73,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,73,-106,73,73,73,73,73,-19,73,73,73,-23,-17,73,73,-93,-94,]),'MENORQUE':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[74,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,74,74,-92,74,74,-91,-112,-114,74,74,74,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,74,74,-104,-103,-113,74,74,74,74,74,74,74,74,-115,74,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,74,-106,74,74,74,74,74,-19,74,74,74,-23,-17,74,74,-93,-94,]),'MAYORQUE':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,186,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[75,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,75,75,-92,75,75,-91,-112,-114,75,75,75,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,75,75,-104,-103,-113,75,75,75,75,75,75,75,75,-115,214,75,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,75,-106,75,75,75,75,75,-19,75,75,75,-23,-17,75,75,-93,-94,]),'MENORIQUE':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[76,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,76,76,-92,76,76,-91,-112,-114,76,76,76,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,76,76,-104,-103,-113,76,76,76,76,76,76,76,76,-115,76,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,76,-106,76,76,76,76,76,-19,76,76,76,-23,-17,76,76,-93,-94,]),'MAYORIQUE':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[77,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,77,77,-92,77,77,-91,-112,-114,77,77,77,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,77,77,-104,-103,-113,77,77,77,77,77,77,77,77,-115,77,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,77,-106,77,77,77,77,77,-19,77,77,77,-23,-17,77,77,-93,-94,]),'OR':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[78,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,78,78,-92,78,78,-91,-112,-114,78,78,78,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,-101,-102,-104,-103,-113,78,78,78,78,78,78,78,78,-115,78,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,78,-106,78,78,78,78,78,-19,78,78,78,-23,-17,78,78,-93,-94,]),'AND':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[79,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,79,79,-92,79,79,-91,-112,-114,79,79,79,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,79,-102,-104,-103,-113,79,79,79,79,79,79,79,79,-115,79,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,79,-106,79,79,79,79,79,-19,79,79,79,-23,-17,79,79,-93,-94,]),'PTO':([33,39,40,41,42,43,44,45,46,47,51,52,53,55,82,84,86,87,90,91,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,140,143,158,159,161,174,175,176,182,189,192,198,199,201,202,203,204,205,206,208,209,210,211,212,213,217,225,226,227,242,244,247,248,249,250,251,257,258,],[80,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,80,80,80,80,80,80,-112,-114,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-104,-103,-113,80,80,80,80,192,80,80,80,-115,80,219,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,80,-106,80,80,80,80,80,-19,80,80,80,-23,-17,80,80,-93,-94,]),'CORDER':([36,39,40,41,42,43,44,45,46,47,51,52,82,83,84,87,90,91,102,108,109,110,111,112,113,114,115,116,117,118,119,120,129,130,135,139,140,173,174,175,176,182,198,199,201,202,203,204,205,206,208,209,211,226,227,248,249,257,258,],[-75,-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,-92,130,-74,-91,-112,-114,160,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,-101,-102,-75,-104,-103,-113,182,206,-74,-73,208,-115,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,-106,249,-19,-23,-17,-93,-94,]),'DDOSPT':([37,49,50,],[85,88,89,]),'PARDER':([39,40,41,42,43,44,45,46,47,51,52,65,82,86,87,90,91,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,152,153,154,155,156,157,165,166,168,169,170,171,172,175,177,179,182,198,199,201,202,203,204,205,206,208,209,210,211,225,227,248,249,250,251,257,258,],[-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,-75,-92,135,-91,-112,-114,162,163,-74,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,-101,-102,-104,-103,-113,-67,-68,-69,-70,-71,-72,198,199,201,202,203,204,205,-73,209,211,-115,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,227,-106,248,-19,-23,-17,257,258,-93,-94,]),'AS':([39,40,41,42,43,44,45,46,47,51,52,82,86,87,90,91,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,182,198,199,201,202,203,204,205,206,208,209,211,227,248,249,257,258,],[-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,-92,136,-91,-112,-114,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,-101,-102,-104,-103,-113,-115,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,-106,-19,-23,-17,-93,-94,]),'BARRAS':([39,40,41,42,43,44,45,46,47,51,52,82,87,90,91,108,109,110,111,112,113,114,115,116,117,118,119,120,130,135,139,143,146,147,148,182,198,199,201,202,203,204,205,206,208,209,211,215,227,248,249,257,258,],[-20,-76,-77,-78,-79,-80,-81,-84,-85,-107,-111,-92,-91,-112,-114,-86,-87,-88,-89,-90,-95,-96,-97,-98,-99,-100,-101,-102,-104,-103,-113,-49,187,-48,-50,-115,-21,-22,-82,-83,-108,-109,-110,-16,-105,-18,-106,-47,-19,-23,-17,-93,-94,]),'DOSPT':([57,96,],[97,149,]),'IN':([62,],[103,]),'LEN':([80,192,],[121,121,]),'CAPACITY':([80,192,],[122,122,]),'CONTAINS':([80,192,],[123,123,]),'TOSTRING':([80,192,],[124,124,]),'TOOWNED':([80,192,],[125,125,]),'ABS':([80,192,],[126,126,]),'SQRT':([80,192,],[127,127,]),'CLONE':([80,192,],[128,128,]),'NEW':([85,],[133,]),'WITH_CAPACITY':([85,],[134,]),'POW':([88,],[137,]),'POWF':([89,],[138,]),'GUIONB':([95,144,145,185,187,253,259,],[148,148,-44,-43,148,-46,-45,]),'BOOL':([97,136,149,],[154,154,154,]),'CHAR':([97,136,149,],[155,155,155,]),'STRING':([97,136,149,],[156,156,156,]),'USIZE':([97,136,149,],[157,157,157,]),'ELSE':([164,195,197,222,263,],[196,196,-39,-38,-40,]),'SIGNOI':([167,],[200,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,24,54,66,93,191,193,223,230,254,256,],[2,63,94,107,141,218,220,246,252,260,261,]),'instruccion':([0,2,24,54,63,66,93,94,107,141,191,193,218,220,223,230,246,252,254,256,260,261,],[3,25,3,3,25,3,3,25,25,25,3,3,25,25,3,3,25,25,3,3,25,25,]),'imprimir':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[4,4,4,4,4,4,4,4,4,4,4,4,232,4,4,4,4,4,4,4,4,4,4,]),'if':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[5,5,5,5,5,5,5,5,5,5,5,5,233,5,5,5,5,5,5,5,5,5,5,]),'while':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[6,6,6,6,6,6,6,6,6,6,6,6,234,6,6,6,6,6,6,6,6,6,6,]),'continue':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[7,7,7,7,7,7,7,7,7,7,7,7,236,7,7,7,7,7,7,7,7,7,7,]),'break':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[8,8,8,8,8,8,8,8,8,8,8,8,235,8,8,8,8,8,8,8,8,8,8,]),'loop':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[9,9,9,9,9,9,9,9,9,9,9,9,237,9,9,9,9,9,9,9,9,9,9,]),'match':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[10,10,10,10,10,10,10,10,10,10,10,10,238,10,10,10,10,10,10,10,10,10,10,]),'declaracion':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[11,11,11,11,11,11,11,11,11,11,11,11,239,11,11,11,11,11,11,11,11,11,11,]),'asignacion':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[12,12,12,12,12,12,12,12,12,12,12,12,240,12,12,12,12,12,12,12,12,12,12,]),'forin':([0,2,24,54,63,66,93,94,107,141,191,193,214,218,220,223,230,246,252,254,256,260,261,],[13,13,13,13,13,13,13,13,13,13,13,13,241,13,13,13,13,13,13,13,13,13,13,]),'main':([2,],[24,]),'expresion':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,150,178,180,181,187,190,200,207,216,219,224,228,229,],[33,53,55,82,84,86,87,99,102,106,108,109,110,111,112,113,114,115,116,117,118,119,120,140,143,158,159,161,174,175,176,143,189,210,212,213,143,217,225,226,242,244,247,250,251,]),'nativas_vec':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,150,178,180,181,187,190,200,207,216,219,224,228,229,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'tostring':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,150,178,180,181,187,190,200,207,216,219,224,228,229,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'toowned':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,150,178,180,181,187,190,200,207,216,219,224,228,229,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'nativas_fun':([15,16,20,35,36,38,48,58,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,92,95,98,100,103,129,131,132,144,150,178,180,181,187,190,200,207,216,219,224,228,229,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'indices':([22,],[59,]),'indice':([22,59,],[60,101,]),'expresiones':([36,65,129,],[83,105,173,]),'a_indices':([52,],[90,]),'a_indice':([52,90,],[91,139,]),'brazos':([95,],[144,]),'brazo':([95,144,],[145,185,]),'coincidencias':([95,144,],[146,146,]),'coincidencia':([95,144,187,],[147,147,215,]),'tipo':([97,136,149,],[151,179,188,]),'else':([164,195,],[194,221,]),'lelseif':([164,],[195,]),'elseif':([164,195,],[197,222,]),'instr_match':([214,],[231,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones main instrucciones','inicio',3,'p_inicio_inicio','Sintactico.py',100),
  ('main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER','main',7,'p_main','Sintactico.py',132),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones1','Sintactico.py',153),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones2','Sintactico.py',159),
  ('instrucciones -> <empty>','instrucciones',0,'p_instrucciones3','Sintactico.py',164),
  ('instruccion -> imprimir PTCOMA','instruccion',2,'p_instrucion','Sintactico.py',171),
  ('instruccion -> if','instruccion',1,'p_instrucion','Sintactico.py',172),
  ('instruccion -> while','instruccion',1,'p_instrucion','Sintactico.py',173),
  ('instruccion -> continue PTCOMA','instruccion',2,'p_instrucion','Sintactico.py',174),
  ('instruccion -> break PTCOMA','instruccion',2,'p_instrucion','Sintactico.py',175),
  ('instruccion -> loop','instruccion',1,'p_instrucion','Sintactico.py',176),
  ('instruccion -> match','instruccion',1,'p_instrucion','Sintactico.py',177),
  ('instruccion -> declaracion PTCOMA','instruccion',2,'p_instrucion','Sintactico.py',178),
  ('instruccion -> asignacion PTCOMA','instruccion',2,'p_instrucion','Sintactico.py',179),
  ('instruccion -> forin','instruccion',1,'p_instrucion','Sintactico.py',180),
  ('expresion -> VEC NOT CORIZQ expresiones CORDER','expresion',5,'p_expresion_vector1','Sintactico.py',222),
  ('expresion -> VEC NOT CORIZQ expresion PTCOMA expresion CORDER','expresion',7,'p_expresion_vector2','Sintactico.py',227),
  ('expresion -> VVEC DDOSPT NEW PARIZQ PARDER','expresion',5,'p_expresion_vector3','Sintactico.py',232),
  ('expresion -> VVEC DDOSPT WITH_CAPACITY PARIZQ expresion PARDER','expresion',6,'p_expresion_vector4','Sintactico.py',237),
  ('expresion -> nativas_vec','expresion',1,'p_nativa_vec','Sintactico.py',243),
  ('nativas_vec -> expresion PTO LEN PARIZQ PARDER','nativas_vec',5,'p_nativa_len','Sintactico.py',250),
  ('nativas_vec -> expresion PTO CAPACITY PARIZQ PARDER','nativas_vec',5,'p_nativa_capacity','Sintactico.py',258),
  ('nativas_vec -> expresion PTO CONTAINS PARIZQ SIGNOI expresion PARDER','nativas_vec',7,'p_nativa_contain','Sintactico.py',293),
  ('imprimir -> PRINTLN NOT PARIZQ expresiones PARDER','imprimir',5,'p_imprimir2','Sintactico.py',416),
  ('declaracion -> LET MUT ID DOSPT tipo IGUAL expresion','declaracion',7,'p_declaracion1','Sintactico.py',425),
  ('declaracion -> LET MUT ID IGUAL expresion','declaracion',5,'p_declaracion2','Sintactico.py',432),
  ('declaracion -> LET ID DOSPT tipo IGUAL expresion','declaracion',6,'p_declaracion3','Sintactico.py',439),
  ('declaracion -> LET ID IGUAL expresion','declaracion',4,'p_declaracion4','Sintactico.py',446),
  ('asignacion -> ID IGUAL expresion','asignacion',3,'p_asignacion1','Sintactico.py',453),
  ('asignacion -> ID indices IGUAL expresion','asignacion',4,'p_asignacion2','Sintactico.py',458),
  ('indices -> indices indice','indices',2,'p_indices_1','Sintactico.py',463),
  ('indices -> indice','indices',1,'p_indices_2','Sintactico.py',469),
  ('indice -> CORIZQ expresion CORDER','indice',3,'p_indice','Sintactico.py',474),
  ('if -> IF expresion LLAVEIZQ instrucciones LLAVEDER','if',5,'p_if','Sintactico.py',480),
  ('if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else','if',6,'p_else_if','Sintactico.py',487),
  ('if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif','if',6,'p_else_if_else_if','Sintactico.py',494),
  ('if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else','if',7,'p_else_if_else','Sintactico.py',502),
  ('lelseif -> lelseif elseif','lelseif',2,'p_else_if1','Sintactico.py',510),
  ('lelseif -> elseif','lelseif',1,'p_else_if2','Sintactico.py',516),
  ('elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER','elseif',6,'p_else_if3','Sintactico.py',521),
  ('else -> ELSE LLAVEIZQ instrucciones LLAVEDER','else',4,'p_else','Sintactico.py',526),
  ('match -> MATCH expresion LLAVEIZQ brazos LLAVEDER','match',5,'p_match','Sintactico.py',534),
  ('brazos -> brazos brazo','brazos',2,'p_brazos_1','Sintactico.py',539),
  ('brazos -> brazo','brazos',1,'p_brazos_2','Sintactico.py',545),
  ('brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER','brazo',6,'p_brazo_1','Sintactico.py',550),
  ('brazo -> coincidencias IGUAL MAYORQUE instr_match COMA','brazo',5,'p_brazo_2','Sintactico.py',555),
  ('coincidencias -> coincidencias BARRAS coincidencia','coincidencias',3,'p_coincidencias_1','Sintactico.py',560),
  ('coincidencias -> coincidencia','coincidencias',1,'p_coincidencias_2','Sintactico.py',566),
  ('coincidencia -> expresion','coincidencia',1,'p_coincidencia_1','Sintactico.py',571),
  ('coincidencia -> GUIONB','coincidencia',1,'p_coincidencia_2','Sintactico.py',576),
  ('instr_match -> imprimir','instr_match',1,'p_instrs_match','Sintactico.py',581),
  ('instr_match -> if','instr_match',1,'p_instrs_match','Sintactico.py',582),
  ('instr_match -> while','instr_match',1,'p_instrs_match','Sintactico.py',583),
  ('instr_match -> break','instr_match',1,'p_instrs_match','Sintactico.py',584),
  ('instr_match -> continue','instr_match',1,'p_instrs_match','Sintactico.py',585),
  ('instr_match -> loop','instr_match',1,'p_instrs_match','Sintactico.py',586),
  ('instr_match -> match','instr_match',1,'p_instrs_match','Sintactico.py',587),
  ('instr_match -> declaracion','instr_match',1,'p_instrs_match','Sintactico.py',588),
  ('instr_match -> asignacion','instr_match',1,'p_instrs_match','Sintactico.py',589),
  ('instr_match -> forin','instr_match',1,'p_instrs_match','Sintactico.py',590),
  ('loop -> LOOP LLAVEIZQ instrucciones LLAVEDER','loop',4,'p_loop_inicio','Sintactico.py',598),
  ('while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER','while',5,'p_while_inicio','Sintactico.py',606),
  ('forin -> FOR ID IN expresion LLAVEIZQ instrucciones LLAVEDER','forin',7,'p_forin_inicio','Sintactico.py',614),
  ('forin -> FOR ID IN expresion PTO PTO expresion LLAVEIZQ instrucciones LLAVEDER','forin',10,'p_forin_2','Sintactico.py',619),
  ('break -> BREAK','break',1,'p_break_inicio','Sintactico.py',627),
  ('continue -> CONTINUE','continue',1,'p_continue_inicio','Sintactico.py',640),
  ('tipo -> I64','tipo',1,'p_tipo1','Sintactico.py',656),
  ('tipo -> F64','tipo',1,'p_tipo1','Sintactico.py',657),
  ('tipo -> BOOL','tipo',1,'p_tipo1','Sintactico.py',658),
  ('tipo -> CHAR','tipo',1,'p_tipo1','Sintactico.py',659),
  ('tipo -> STRING','tipo',1,'p_tipo1','Sintactico.py',660),
  ('tipo -> USIZE','tipo',1,'p_tipo1','Sintactico.py',661),
  ('expresiones -> expresiones COMA expresion','expresiones',3,'p_expresiones1','Sintactico.py',687),
  ('expresiones -> expresion','expresiones',1,'p_expresiones2','Sintactico.py',695),
  ('expresiones -> <empty>','expresiones',0,'p_expresiones3','Sintactico.py',700),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','Sintactico.py',712),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_decimal','Sintactico.py',719),
  ('expresion -> TRUE','expresion',1,'p_expresion_true','Sintactico.py',726),
  ('expresion -> FALSE','expresion',1,'p_expresion_false','Sintactico.py',731),
  ('expresion -> tostring','expresion',1,'p_expresion_to','Sintactico.py',738),
  ('expresion -> toowned','expresion',1,'p_expresion_to','Sintactico.py',739),
  ('tostring -> expresion PTO TOSTRING PARIZQ PARDER','tostring',5,'p_expresion_tostring','Sintactico.py',746),
  ('toowned -> expresion PTO TOOWNED PARIZQ PARDER','toowned',5,'p_expresion_toowned','Sintactico.py',751),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena1','Sintactico.py',760),
  ('expresion -> CARACTER','expresion',1,'p_expresion_caracter','Sintactico.py',767),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',774),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',775),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',776),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',777),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_aritmetica1','Sintactico.py',778),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_unaria','Sintactico.py',797),
  ('expresion -> NOT expresion','expresion',2,'p_exp_unaria','Sintactico.py',798),
  ('expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER','expresion',8,'p_expresion_aritmetica2','Sintactico.py',811),
  ('expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER','expresion',8,'p_expresion_aritmetica2','Sintactico.py',812),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',826),
  ('expresion -> expresion NOIGUALQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',827),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',828),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',829),
  ('expresion -> expresion MENORIQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',830),
  ('expresion -> expresion MAYORIQUE expresion','expresion',3,'p_expresion_relacional','Sintactico.py',831),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','Sintactico.py',838),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','Sintactico.py',839),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_exp_agrupa','Sintactico.py',851),
  ('expresion -> CORIZQ expresiones CORDER','expresion',3,'p_expresion_arreglo1','Sintactico.py',865),
  ('expresion -> CORIZQ expresion PTCOMA expresion CORDER','expresion',5,'p_expresion_arreglo2','Sintactico.py',870),
  ('expresion -> PARIZQ expresion AS tipo PARDER','expresion',5,'p_casteo','Sintactico.py',1026),
  ('expresion -> nativas_fun','expresion',1,'p_funciones_nat_inicio','Sintactico.py',1034),
  ('nativas_fun -> expresion PTO ABS PARIZQ PARDER','nativas_fun',5,'p_funciones_nat1','Sintactico.py',1039),
  ('nativas_fun -> expresion PTO SQRT PARIZQ PARDER','nativas_fun',5,'p_funciones_nat1','Sintactico.py',1040),
  ('nativas_fun -> expresion PTO CLONE PARIZQ PARDER','nativas_fun',5,'p_funciones_nat2','Sintactico.py',1050),
  ('expresion -> ID','expresion',1,'p_acceso_variable_1','Sintactico.py',1057),
  ('expresion -> ID a_indices','expresion',2,'p_acceso_variable_2','Sintactico.py',1062),
  ('a_indices -> a_indices a_indice','a_indices',2,'p_aindices_1','Sintactico.py',1067),
  ('a_indices -> a_indice','a_indices',1,'p_aindices_2','Sintactico.py',1073),
  ('a_indice -> CORIZQ expresion CORDER','a_indice',3,'p_aindice','Sintactico.py',1078),
]
