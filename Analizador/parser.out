Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BARRAS
    BREAK
    CAPACITY
    CONTAINS
    CONTINUE
    CORDER
    CORIZQ
    DOSPT
    FOR
    GUIONB
    ID
    IGUAL
    IN
    INSERT
    LEN
    LET
    LOOP
    MATCH
    MUT
    NEW
    PUSH
    REMOVE
    RETURN
    SIGNOI
    STR
    VEC
    VVEC
    WHILE
    WITH_CAPACITY

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 3     instrucciones -> instrucciones instruccion
Rule 4     instrucciones -> instruccion
Rule 5     instrucciones -> <empty>
Rule 6     instruccion -> imprimir
Rule 7     instruccion -> if
Rule 8     imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
Rule 9     if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 10    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 11    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 12    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 13    lelseif -> lelseif elseif
Rule 14    lelseif -> elseif
Rule 15    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 16    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 17    tipo -> I64
Rule 18    tipo -> F64
Rule 19    tipo -> BOOL
Rule 20    tipo -> CHAR
Rule 21    tipo -> STRING
Rule 22    tipo -> USIZE
Rule 23    expresiones -> expresiones COMA expresion
Rule 24    expresiones -> expresion
Rule 25    expresion -> ENTERO
Rule 26    expresion -> DECIMAL
Rule 27    expresion -> TRUE
Rule 28    expresion -> FALSE
Rule 29    expresion -> tostring
Rule 30    expresion -> toowned
Rule 31    tostring -> expresion PTO TOSTRING PARIZQ PARDER
Rule 32    toowned -> expresion PTO TOOWNED PARIZQ PARDER
Rule 33    expresion -> CADENA
Rule 34    expresion -> CARACTER
Rule 35    expresion -> expresion MAS expresion
Rule 36    expresion -> expresion MENOS expresion
Rule 37    expresion -> expresion POR expresion
Rule 38    expresion -> expresion DIVIDIDO expresion
Rule 39    expresion -> expresion MODULO expresion
Rule 40    expresion -> MENOS expresion
Rule 41    expresion -> NOT expresion
Rule 42    expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 43    expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 44    expresion -> expresion IGUALQUE expresion
Rule 45    expresion -> expresion NOIGUALQUE expresion
Rule 46    expresion -> expresion MENORQUE expresion
Rule 47    expresion -> expresion MAYORQUE expresion
Rule 48    expresion -> expresion MENORIQUE expresion
Rule 49    expresion -> expresion MAYORIQUE expresion
Rule 50    expresion -> expresion OR expresion
Rule 51    expresion -> expresion AND expresion
Rule 52    expresion -> PARIZQ expresion PARDER
Rule 53    expresion -> PARIZQ expresion AS tipo PARDER
Rule 54    expresion -> nativas_fun
Rule 55    nativas_fun -> expresion PTO ABS PARIZQ PARDER
Rule 56    nativas_fun -> expresion PTO SQRT PARIZQ PARDER
Rule 57    nativas_fun -> expresion PTO CLONE PARIZQ PARDER

Terminals, with rules where they appear

ABS                  : 55
AND                  : 51
AS                   : 53
BARRAS               : 
BOOL                 : 19
BREAK                : 
CADENA               : 33
CAPACITY             : 
CARACTER             : 34
CHAR                 : 20
CLONE                : 57
COMA                 : 23 42 43
CONTAINS             : 
CONTINUE             : 
CORDER               : 
CORIZQ               : 
DDOSPT               : 42 43
DECIMAL              : 26
DIVIDIDO             : 38
DOSPT                : 
ELSE                 : 15 16
ENTERO               : 25
F64                  : 18 43
FALSE                : 28
FN                   : 2
FOR                  : 
GUIONB               : 
I64                  : 17 42
ID                   : 
IF                   : 9 10 11 12 15
IGUAL                : 
IGUALQUE             : 44
IN                   : 
INSERT               : 
LEN                  : 
LET                  : 
LLAVEDER             : 2 9 10 11 12 15 16
LLAVEIZQ             : 2 9 10 11 12 15 16
LOOP                 : 
MAIN                 : 2
MAS                  : 35
MATCH                : 
MAYORIQUE            : 49
MAYORQUE             : 47
MENORIQUE            : 48
MENORQUE             : 46
MENOS                : 36 40
MODULO               : 39
MUT                  : 
NEW                  : 
NOIGUALQUE           : 45
NOT                  : 8 41
OR                   : 50
PARDER               : 2 8 31 32 42 43 52 53 55 56 57
PARIZQ               : 2 8 31 32 42 43 52 53 55 56 57
POR                  : 37
POW                  : 42
POWF                 : 43
PRINTLN              : 8
PTCOMA               : 8
PTO                  : 31 32 55 56 57
PUSH                 : 
REMOVE               : 
RETURN               : 
SIGNOI               : 
SQRT                 : 56
STR                  : 
STRING               : 21
TOOWNED              : 32
TOSTRING             : 31
TRUE                 : 27
USIZE                : 22
VEC                  : 
VVEC                 : 
WHILE                : 
WITH_CAPACITY        : 
error                : 

Nonterminals, with rules where they appear

else                 : 10 12
elseif               : 13 14
expresion            : 9 10 11 12 15 23 24 31 32 35 35 36 36 37 37 38 38 39 39 40 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 53 55 56 57
expresiones          : 8 23
if                   : 7
imprimir             : 6
inicio               : 0
instruccion          : 3 4
instrucciones        : 1 1 2 3 9 10 11 12 15 16
lelseif              : 11 12 13
main                 : 1
nativas_fun          : 54
tipo                 : 53
toowned              : 30
tostring             : 29

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    FN              reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (3) instrucciones -> instrucciones . instruccion
    (2) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    FN              shift and go to state 10
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

    main                           shift and go to state 8
    instruccion                    shift and go to state 9
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 3

    (4) instrucciones -> instruccion .

    FN              reduce using rule 4 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instruccion .)
    IF              reduce using rule 4 (instrucciones -> instruccion .)
    $end            reduce using rule 4 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instruccion .)


state 4

    (6) instruccion -> imprimir .

    FN              reduce using rule 6 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 6 (instruccion -> imprimir .)
    IF              reduce using rule 6 (instruccion -> imprimir .)
    $end            reduce using rule 6 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 6 (instruccion -> imprimir .)


state 5

    (7) instruccion -> if .

    FN              reduce using rule 7 (instruccion -> if .)
    PRINTLN         reduce using rule 7 (instruccion -> if .)
    IF              reduce using rule 7 (instruccion -> if .)
    $end            reduce using rule 7 (instruccion -> if .)
    LLAVEDER        reduce using rule 7 (instruccion -> if .)


state 6

    (8) imprimir -> PRINTLN . NOT PARIZQ expresiones PARDER PTCOMA

    NOT             shift and go to state 11


state 7

    (9) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 12
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 8

    (1) inicio -> instrucciones main . instrucciones
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    $end            reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 27
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 9

    (3) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 3 (instrucciones -> instrucciones instruccion .)


state 10

    (2) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 28


state 11

    (8) imprimir -> PRINTLN NOT . PARIZQ expresiones PARDER PTCOMA

    PARIZQ          shift and go to state 29


state 12

    (9) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (10) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    OR              shift and go to state 42
    AND             shift and go to state 43
    PTO             shift and go to state 44


state 13

    (25) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 25 (expresion -> ENTERO .)
    MAS             reduce using rule 25 (expresion -> ENTERO .)
    MENOS           reduce using rule 25 (expresion -> ENTERO .)
    POR             reduce using rule 25 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 25 (expresion -> ENTERO .)
    MODULO          reduce using rule 25 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 25 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 25 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 25 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 25 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 25 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 25 (expresion -> ENTERO .)
    OR              reduce using rule 25 (expresion -> ENTERO .)
    AND             reduce using rule 25 (expresion -> ENTERO .)
    PTO             reduce using rule 25 (expresion -> ENTERO .)
    PARDER          reduce using rule 25 (expresion -> ENTERO .)
    AS              reduce using rule 25 (expresion -> ENTERO .)
    COMA            reduce using rule 25 (expresion -> ENTERO .)


state 14

    (26) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 26 (expresion -> DECIMAL .)
    MAS             reduce using rule 26 (expresion -> DECIMAL .)
    MENOS           reduce using rule 26 (expresion -> DECIMAL .)
    POR             reduce using rule 26 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 26 (expresion -> DECIMAL .)
    MODULO          reduce using rule 26 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 26 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 26 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 26 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 26 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 26 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 26 (expresion -> DECIMAL .)
    OR              reduce using rule 26 (expresion -> DECIMAL .)
    AND             reduce using rule 26 (expresion -> DECIMAL .)
    PTO             reduce using rule 26 (expresion -> DECIMAL .)
    PARDER          reduce using rule 26 (expresion -> DECIMAL .)
    AS              reduce using rule 26 (expresion -> DECIMAL .)
    COMA            reduce using rule 26 (expresion -> DECIMAL .)


state 15

    (27) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 27 (expresion -> TRUE .)
    MAS             reduce using rule 27 (expresion -> TRUE .)
    MENOS           reduce using rule 27 (expresion -> TRUE .)
    POR             reduce using rule 27 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 27 (expresion -> TRUE .)
    MODULO          reduce using rule 27 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 27 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 27 (expresion -> TRUE .)
    MENORQUE        reduce using rule 27 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 27 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 27 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 27 (expresion -> TRUE .)
    OR              reduce using rule 27 (expresion -> TRUE .)
    AND             reduce using rule 27 (expresion -> TRUE .)
    PTO             reduce using rule 27 (expresion -> TRUE .)
    PARDER          reduce using rule 27 (expresion -> TRUE .)
    AS              reduce using rule 27 (expresion -> TRUE .)
    COMA            reduce using rule 27 (expresion -> TRUE .)


state 16

    (28) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 28 (expresion -> FALSE .)
    MAS             reduce using rule 28 (expresion -> FALSE .)
    MENOS           reduce using rule 28 (expresion -> FALSE .)
    POR             reduce using rule 28 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 28 (expresion -> FALSE .)
    MODULO          reduce using rule 28 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 28 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 28 (expresion -> FALSE .)
    MENORQUE        reduce using rule 28 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 28 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 28 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 28 (expresion -> FALSE .)
    OR              reduce using rule 28 (expresion -> FALSE .)
    AND             reduce using rule 28 (expresion -> FALSE .)
    PTO             reduce using rule 28 (expresion -> FALSE .)
    PARDER          reduce using rule 28 (expresion -> FALSE .)
    AS              reduce using rule 28 (expresion -> FALSE .)
    COMA            reduce using rule 28 (expresion -> FALSE .)


state 17

    (29) expresion -> tostring .

    LLAVEIZQ        reduce using rule 29 (expresion -> tostring .)
    MAS             reduce using rule 29 (expresion -> tostring .)
    MENOS           reduce using rule 29 (expresion -> tostring .)
    POR             reduce using rule 29 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 29 (expresion -> tostring .)
    MODULO          reduce using rule 29 (expresion -> tostring .)
    IGUALQUE        reduce using rule 29 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 29 (expresion -> tostring .)
    MENORQUE        reduce using rule 29 (expresion -> tostring .)
    MAYORQUE        reduce using rule 29 (expresion -> tostring .)
    MENORIQUE       reduce using rule 29 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 29 (expresion -> tostring .)
    OR              reduce using rule 29 (expresion -> tostring .)
    AND             reduce using rule 29 (expresion -> tostring .)
    PTO             reduce using rule 29 (expresion -> tostring .)
    PARDER          reduce using rule 29 (expresion -> tostring .)
    AS              reduce using rule 29 (expresion -> tostring .)
    COMA            reduce using rule 29 (expresion -> tostring .)


state 18

    (30) expresion -> toowned .

    LLAVEIZQ        reduce using rule 30 (expresion -> toowned .)
    MAS             reduce using rule 30 (expresion -> toowned .)
    MENOS           reduce using rule 30 (expresion -> toowned .)
    POR             reduce using rule 30 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 30 (expresion -> toowned .)
    MODULO          reduce using rule 30 (expresion -> toowned .)
    IGUALQUE        reduce using rule 30 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 30 (expresion -> toowned .)
    MENORQUE        reduce using rule 30 (expresion -> toowned .)
    MAYORQUE        reduce using rule 30 (expresion -> toowned .)
    MENORIQUE       reduce using rule 30 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 30 (expresion -> toowned .)
    OR              reduce using rule 30 (expresion -> toowned .)
    AND             reduce using rule 30 (expresion -> toowned .)
    PTO             reduce using rule 30 (expresion -> toowned .)
    PARDER          reduce using rule 30 (expresion -> toowned .)
    AS              reduce using rule 30 (expresion -> toowned .)
    COMA            reduce using rule 30 (expresion -> toowned .)


state 19

    (33) expresion -> CADENA .

    LLAVEIZQ        reduce using rule 33 (expresion -> CADENA .)
    MAS             reduce using rule 33 (expresion -> CADENA .)
    MENOS           reduce using rule 33 (expresion -> CADENA .)
    POR             reduce using rule 33 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 33 (expresion -> CADENA .)
    MODULO          reduce using rule 33 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 33 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 33 (expresion -> CADENA .)
    MENORQUE        reduce using rule 33 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 33 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 33 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 33 (expresion -> CADENA .)
    OR              reduce using rule 33 (expresion -> CADENA .)
    AND             reduce using rule 33 (expresion -> CADENA .)
    PTO             reduce using rule 33 (expresion -> CADENA .)
    PARDER          reduce using rule 33 (expresion -> CADENA .)
    AS              reduce using rule 33 (expresion -> CADENA .)
    COMA            reduce using rule 33 (expresion -> CADENA .)


state 20

    (34) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 34 (expresion -> CARACTER .)
    MAS             reduce using rule 34 (expresion -> CARACTER .)
    MENOS           reduce using rule 34 (expresion -> CARACTER .)
    POR             reduce using rule 34 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 34 (expresion -> CARACTER .)
    MODULO          reduce using rule 34 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 34 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 34 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 34 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 34 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 34 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 34 (expresion -> CARACTER .)
    OR              reduce using rule 34 (expresion -> CARACTER .)
    AND             reduce using rule 34 (expresion -> CARACTER .)
    PTO             reduce using rule 34 (expresion -> CARACTER .)
    PARDER          reduce using rule 34 (expresion -> CARACTER .)
    AS              reduce using rule 34 (expresion -> CARACTER .)
    COMA            reduce using rule 34 (expresion -> CARACTER .)


state 21

    (40) expresion -> MENOS . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 45
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 22

    (41) expresion -> NOT . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 46
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 23

    (42) expresion -> I64 . DDOSPT POW PARIZQ expresion COMA expresion PARDER

    DDOSPT          shift and go to state 47


state 24

    (52) expresion -> PARIZQ . expresion PARDER
    (53) expresion -> PARIZQ . expresion AS tipo PARDER
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 48
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 25

    (43) expresion -> F64 . DDOSPT POWF PARIZQ expresion COMA expresion PARDER

    DDOSPT          shift and go to state 49


state 26

    (54) expresion -> nativas_fun .

    LLAVEIZQ        reduce using rule 54 (expresion -> nativas_fun .)
    MAS             reduce using rule 54 (expresion -> nativas_fun .)
    MENOS           reduce using rule 54 (expresion -> nativas_fun .)
    POR             reduce using rule 54 (expresion -> nativas_fun .)
    DIVIDIDO        reduce using rule 54 (expresion -> nativas_fun .)
    MODULO          reduce using rule 54 (expresion -> nativas_fun .)
    IGUALQUE        reduce using rule 54 (expresion -> nativas_fun .)
    NOIGUALQUE      reduce using rule 54 (expresion -> nativas_fun .)
    MENORQUE        reduce using rule 54 (expresion -> nativas_fun .)
    MAYORQUE        reduce using rule 54 (expresion -> nativas_fun .)
    MENORIQUE       reduce using rule 54 (expresion -> nativas_fun .)
    MAYORIQUE       reduce using rule 54 (expresion -> nativas_fun .)
    OR              reduce using rule 54 (expresion -> nativas_fun .)
    AND             reduce using rule 54 (expresion -> nativas_fun .)
    PTO             reduce using rule 54 (expresion -> nativas_fun .)
    PARDER          reduce using rule 54 (expresion -> nativas_fun .)
    AS              reduce using rule 54 (expresion -> nativas_fun .)
    COMA            reduce using rule 54 (expresion -> nativas_fun .)


state 27

    (1) inicio -> instrucciones main instrucciones .
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

    instruccion                    shift and go to state 9
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 28

    (2) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 50


state 29

    (8) imprimir -> PRINTLN NOT PARIZQ . expresiones PARDER PTCOMA
    (23) expresiones -> . expresiones COMA expresion
    (24) expresiones -> . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresiones                    shift and go to state 51
    expresion                      shift and go to state 52
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 30

    (9) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (10) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (11) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (12) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 53
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 31

    (35) expresion -> expresion MAS . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 54
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 32

    (36) expresion -> expresion MENOS . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 55
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 33

    (37) expresion -> expresion POR . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 56
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 34

    (38) expresion -> expresion DIVIDIDO . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 57
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 35

    (39) expresion -> expresion MODULO . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 58
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 36

    (44) expresion -> expresion IGUALQUE . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 59
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 37

    (45) expresion -> expresion NOIGUALQUE . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 60
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 38

    (46) expresion -> expresion MENORQUE . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 61
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 39

    (47) expresion -> expresion MAYORQUE . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 62
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 40

    (48) expresion -> expresion MENORIQUE . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 63
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 41

    (49) expresion -> expresion MAYORIQUE . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 64
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 42

    (50) expresion -> expresion OR . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 65
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 43

    (51) expresion -> expresion AND . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 66
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 44

    (31) tostring -> expresion PTO . TOSTRING PARIZQ PARDER
    (32) toowned -> expresion PTO . TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (56) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    TOSTRING        shift and go to state 67
    TOOWNED         shift and go to state 68
    ABS             shift and go to state 69
    SQRT            shift and go to state 70
    CLONE           shift and go to state 71


state 45

    (40) expresion -> MENOS expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 40 (expresion -> MENOS expresion .)
    MAS             reduce using rule 40 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 40 (expresion -> MENOS expresion .)
    POR             reduce using rule 40 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 40 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 40 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 40 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 40 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 40 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 40 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 40 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 40 (expresion -> MENOS expresion .)
    OR              reduce using rule 40 (expresion -> MENOS expresion .)
    AND             reduce using rule 40 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 40 (expresion -> MENOS expresion .)
    AS              reduce using rule 40 (expresion -> MENOS expresion .)
    COMA            reduce using rule 40 (expresion -> MENOS expresion .)
    PTO             shift and go to state 44

  ! PTO             [ reduce using rule 40 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! MODULO          [ shift and go to state 35 ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 46

    (41) expresion -> NOT expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 41 (expresion -> NOT expresion .)
    MAS             reduce using rule 41 (expresion -> NOT expresion .)
    MENOS           reduce using rule 41 (expresion -> NOT expresion .)
    POR             reduce using rule 41 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 41 (expresion -> NOT expresion .)
    MODULO          reduce using rule 41 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 41 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 41 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 41 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 41 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 41 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 41 (expresion -> NOT expresion .)
    OR              reduce using rule 41 (expresion -> NOT expresion .)
    AND             reduce using rule 41 (expresion -> NOT expresion .)
    PARDER          reduce using rule 41 (expresion -> NOT expresion .)
    AS              reduce using rule 41 (expresion -> NOT expresion .)
    COMA            reduce using rule 41 (expresion -> NOT expresion .)
    PTO             shift and go to state 44

  ! PTO             [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! MODULO          [ shift and go to state 35 ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 47

    (42) expresion -> I64 DDOSPT . POW PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 72


state 48

    (52) expresion -> PARIZQ expresion . PARDER
    (53) expresion -> PARIZQ expresion . AS tipo PARDER
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 73
    AS              shift and go to state 74
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    OR              shift and go to state 42
    AND             shift and go to state 43
    PTO             shift and go to state 44


state 49

    (43) expresion -> F64 DDOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POWF            shift and go to state 75


state 50

    (2) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 76


state 51

    (8) imprimir -> PRINTLN NOT PARIZQ expresiones . PARDER PTCOMA
    (23) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 77
    COMA            shift and go to state 78


state 52

    (24) expresiones -> expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          reduce using rule 24 (expresiones -> expresion .)
    COMA            reduce using rule 24 (expresiones -> expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    OR              shift and go to state 42
    AND             shift and go to state 43
    PTO             shift and go to state 44


state 53

    (9) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (10) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (11) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (12) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LLAVEDER        shift and go to state 79
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

    instruccion                    shift and go to state 9
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 54

    (35) expresion -> expresion MAS expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 35 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 35 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 35 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 35 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 35 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 35 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 35 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 35 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 35 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 35 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 35 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 35 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 35 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 35 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    PTO             shift and go to state 44

  ! POR             [ reduce using rule 35 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 35 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 35 (expresion -> expresion MAS expresion .) ]
  ! PTO             [ reduce using rule 35 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 55

    (36) expresion -> expresion MENOS expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 36 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 36 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 36 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 36 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 36 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 36 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 36 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 36 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 36 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 36 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 36 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 36 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 36 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 36 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    PTO             shift and go to state 44

  ! POR             [ reduce using rule 36 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 36 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 36 (expresion -> expresion MENOS expresion .) ]
  ! PTO             [ reduce using rule 36 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 56

    (37) expresion -> expresion POR expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 37 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 37 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 37 (expresion -> expresion POR expresion .)
    POR             reduce using rule 37 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 37 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 37 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 37 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 37 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 37 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 37 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 37 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 37 (expresion -> expresion POR expresion .)
    OR              reduce using rule 37 (expresion -> expresion POR expresion .)
    AND             reduce using rule 37 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 37 (expresion -> expresion POR expresion .)
    AS              reduce using rule 37 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 37 (expresion -> expresion POR expresion .)
    PTO             shift and go to state 44

  ! PTO             [ reduce using rule 37 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! MODULO          [ shift and go to state 35 ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 57

    (38) expresion -> expresion DIVIDIDO expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    AS              reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .)
    PTO             shift and go to state 44

  ! PTO             [ reduce using rule 38 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! MODULO          [ shift and go to state 35 ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 58

    (39) expresion -> expresion MODULO expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 39 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 39 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 39 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 39 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 39 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 39 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 39 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 39 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 39 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 39 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 39 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 39 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 39 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 39 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 39 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 39 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 39 (expresion -> expresion MODULO expresion .)
    PTO             shift and go to state 44

  ! PTO             [ reduce using rule 39 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! MODULO          [ shift and go to state 35 ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 59

    (44) expresion -> expresion IGUALQUE expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    AS              reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 44 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    PTO             shift and go to state 44

  ! MAS             [ reduce using rule 44 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 44 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 44 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 44 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 44 (expresion -> expresion IGUALQUE expresion .) ]
  ! PTO             [ reduce using rule 44 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 60

    (45) expresion -> expresion NOIGUALQUE expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    AS              reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    PTO             shift and go to state 44

  ! MAS             [ reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! PTO             [ reduce using rule 45 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 61

    (46) expresion -> expresion MENORQUE expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    AS              reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 46 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    PTO             shift and go to state 44

  ! MAS             [ reduce using rule 46 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 46 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 46 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 46 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> expresion MENORQUE expresion .) ]
  ! PTO             [ reduce using rule 46 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 62

    (47) expresion -> expresion MAYORQUE expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    AS              reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 47 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    PTO             shift and go to state 44

  ! MAS             [ reduce using rule 47 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 47 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 47 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 47 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 47 (expresion -> expresion MAYORQUE expresion .) ]
  ! PTO             [ reduce using rule 47 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 63

    (48) expresion -> expresion MENORIQUE expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    AS              reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 48 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    PTO             shift and go to state 44

  ! MAS             [ reduce using rule 48 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 48 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 48 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 48 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 48 (expresion -> expresion MENORIQUE expresion .) ]
  ! PTO             [ reduce using rule 48 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 64

    (49) expresion -> expresion MAYORIQUE expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    AS              reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    PTO             shift and go to state 44

  ! MAS             [ reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .) ]
  ! PTO             [ reduce using rule 49 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 36 ]
  ! NOIGUALQUE      [ shift and go to state 37 ]
  ! MENORQUE        [ shift and go to state 38 ]
  ! MAYORQUE        [ shift and go to state 39 ]
  ! MENORIQUE       [ shift and go to state 40 ]
  ! MAYORIQUE       [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 65

    (50) expresion -> expresion OR expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 50 (expresion -> expresion OR expresion .)
    OR              reduce using rule 50 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 50 (expresion -> expresion OR expresion .)
    AS              reduce using rule 50 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 50 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    AND             shift and go to state 43
    PTO             shift and go to state 44

  ! MAS             [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! PTO             [ reduce using rule 50 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 42 ]


state 66

    (51) expresion -> expresion AND expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 51 (expresion -> expresion AND expresion .)
    OR              reduce using rule 51 (expresion -> expresion AND expresion .)
    AND             reduce using rule 51 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 51 (expresion -> expresion AND expresion .)
    AS              reduce using rule 51 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 51 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    PTO             shift and go to state 44

  ! MAS             [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! PTO             [ reduce using rule 51 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]


state 67

    (31) tostring -> expresion PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 80


state 68

    (32) toowned -> expresion PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 81


state 69

    (55) nativas_fun -> expresion PTO ABS . PARIZQ PARDER

    PARIZQ          shift and go to state 82


state 70

    (56) nativas_fun -> expresion PTO SQRT . PARIZQ PARDER

    PARIZQ          shift and go to state 83


state 71

    (57) nativas_fun -> expresion PTO CLONE . PARIZQ PARDER

    PARIZQ          shift and go to state 84


state 72

    (42) expresion -> I64 DDOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 85


state 73

    (52) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    AS              reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 52 (expresion -> PARIZQ expresion PARDER .)


state 74

    (53) expresion -> PARIZQ expresion AS . tipo PARDER
    (17) tipo -> . I64
    (18) tipo -> . F64
    (19) tipo -> . BOOL
    (20) tipo -> . CHAR
    (21) tipo -> . STRING
    (22) tipo -> . USIZE

    I64             shift and go to state 87
    F64             shift and go to state 88
    BOOL            shift and go to state 89
    CHAR            shift and go to state 90
    STRING          shift and go to state 91
    USIZE           shift and go to state 92

    tipo                           shift and go to state 86

state 75

    (43) expresion -> F64 DDOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 93


state 76

    (2) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 94


state 77

    (8) imprimir -> PRINTLN NOT PARIZQ expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 95


state 78

    (23) expresiones -> expresiones COMA . expresion
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 96
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 79

    (9) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (10) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (11) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (12) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (16) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (13) lelseif -> . lelseif elseif
    (14) lelseif -> . elseif
    (15) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 9 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 9 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 9 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 9 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 9 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 99

    else                           shift and go to state 97
    lelseif                        shift and go to state 98
    elseif                         shift and go to state 100

state 80

    (31) tostring -> expresion PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 101


state 81

    (32) toowned -> expresion PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 102


state 82

    (55) nativas_fun -> expresion PTO ABS PARIZQ . PARDER

    PARDER          shift and go to state 103


state 83

    (56) nativas_fun -> expresion PTO SQRT PARIZQ . PARDER

    PARDER          shift and go to state 104


state 84

    (57) nativas_fun -> expresion PTO CLONE PARIZQ . PARDER

    PARDER          shift and go to state 105


state 85

    (42) expresion -> I64 DDOSPT POW PARIZQ . expresion COMA expresion PARDER
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 106
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 86

    (53) expresion -> PARIZQ expresion AS tipo . PARDER

    PARDER          shift and go to state 107


state 87

    (17) tipo -> I64 .

    PARDER          reduce using rule 17 (tipo -> I64 .)


state 88

    (18) tipo -> F64 .

    PARDER          reduce using rule 18 (tipo -> F64 .)


state 89

    (19) tipo -> BOOL .

    PARDER          reduce using rule 19 (tipo -> BOOL .)


state 90

    (20) tipo -> CHAR .

    PARDER          reduce using rule 20 (tipo -> CHAR .)


state 91

    (21) tipo -> STRING .

    PARDER          reduce using rule 21 (tipo -> STRING .)


state 92

    (22) tipo -> USIZE .

    PARDER          reduce using rule 22 (tipo -> USIZE .)


state 93

    (43) expresion -> F64 DDOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 108
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 94

    (2) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 109
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 95

    (8) imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .

    FN              reduce using rule 8 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 8 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    IF              reduce using rule 8 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    $end            reduce using rule 8 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 8 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)


state 96

    (23) expresiones -> expresiones COMA expresion .
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          reduce using rule 23 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 23 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    OR              shift and go to state 42
    AND             shift and go to state 43
    PTO             shift and go to state 44


state 97

    (10) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 10 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 10 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 10 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 10 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 10 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 98

    (11) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (12) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (13) lelseif -> lelseif . elseif
    (16) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (15) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 11 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 11 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 11 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 11 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 11 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 99

    else                           shift and go to state 110
    elseif                         shift and go to state 111

state 99

    (16) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (15) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 112
    IF              shift and go to state 113


state 100

    (14) lelseif -> elseif .

    ELSE            reduce using rule 14 (lelseif -> elseif .)
    FN              reduce using rule 14 (lelseif -> elseif .)
    PRINTLN         reduce using rule 14 (lelseif -> elseif .)
    IF              reduce using rule 14 (lelseif -> elseif .)
    $end            reduce using rule 14 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 14 (lelseif -> elseif .)


state 101

    (31) tostring -> expresion PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    AS              reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 31 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)


state 102

    (32) toowned -> expresion PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    AS              reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 32 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)


state 103

    (55) nativas_fun -> expresion PTO ABS PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAS             reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENOS           reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    POR             reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MODULO          reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    IGUALQUE        reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORQUE        reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORQUE        reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORIQUE       reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    OR              reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AND             reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PTO             reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PARDER          reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AS              reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    COMA            reduce using rule 55 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)


state 104

    (56) nativas_fun -> expresion PTO SQRT PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAS             reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENOS           reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    POR             reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MODULO          reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    IGUALQUE        reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORQUE        reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORQUE        reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORIQUE       reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    OR              reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AND             reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PTO             reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PARDER          reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AS              reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    COMA            reduce using rule 56 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)


state 105

    (57) nativas_fun -> expresion PTO CLONE PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAS             reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENOS           reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    POR             reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MODULO          reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    IGUALQUE        reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORQUE        reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORQUE        reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORIQUE       reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    OR              reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AND             reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PTO             reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PARDER          reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AS              reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    COMA            reduce using rule 57 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)


state 106

    (42) expresion -> I64 DDOSPT POW PARIZQ expresion . COMA expresion PARDER
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 114
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    OR              shift and go to state 42
    AND             shift and go to state 43
    PTO             shift and go to state 44


state 107

    (53) expresion -> PARIZQ expresion AS tipo PARDER .

    LLAVEIZQ        reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAS             reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENOS           reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    POR             reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    DIVIDIDO        reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MODULO          reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    IGUALQUE        reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    NOIGUALQUE      reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORQUE        reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORQUE        reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORIQUE       reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORIQUE       reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    OR              reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AND             reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PTO             reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PARDER          reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AS              reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)
    COMA            reduce using rule 53 (expresion -> PARIZQ expresion AS tipo PARDER .)


state 108

    (43) expresion -> F64 DDOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 115
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    OR              shift and go to state 42
    AND             shift and go to state 43
    PTO             shift and go to state 44


state 109

    (2) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LLAVEDER        shift and go to state 116
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

    instruccion                    shift and go to state 9
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 110

    (12) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 111

    (13) lelseif -> lelseif elseif .

    ELSE            reduce using rule 13 (lelseif -> lelseif elseif .)
    FN              reduce using rule 13 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 13 (lelseif -> lelseif elseif .)
    IF              reduce using rule 13 (lelseif -> lelseif elseif .)
    $end            reduce using rule 13 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 13 (lelseif -> lelseif elseif .)


state 112

    (16) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 113

    (15) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 118
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 114

    (42) expresion -> I64 DDOSPT POW PARIZQ expresion COMA . expresion PARDER
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 119
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 115

    (43) expresion -> F64 DDOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (25) expresion -> . ENTERO
    (26) expresion -> . DECIMAL
    (27) expresion -> . TRUE
    (28) expresion -> . FALSE
    (29) expresion -> . tostring
    (30) expresion -> . toowned
    (33) expresion -> . CADENA
    (34) expresion -> . CARACTER
    (35) expresion -> . expresion MAS expresion
    (36) expresion -> . expresion MENOS expresion
    (37) expresion -> . expresion POR expresion
    (38) expresion -> . expresion DIVIDIDO expresion
    (39) expresion -> . expresion MODULO expresion
    (40) expresion -> . MENOS expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (43) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (44) expresion -> . expresion IGUALQUE expresion
    (45) expresion -> . expresion NOIGUALQUE expresion
    (46) expresion -> . expresion MENORQUE expresion
    (47) expresion -> . expresion MAYORQUE expresion
    (48) expresion -> . expresion MENORIQUE expresion
    (49) expresion -> . expresion MAYORIQUE expresion
    (50) expresion -> . expresion OR expresion
    (51) expresion -> . expresion AND expresion
    (52) expresion -> . PARIZQ expresion PARDER
    (53) expresion -> . PARIZQ expresion AS tipo PARDER
    (54) expresion -> . nativas_fun
    (31) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (32) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (56) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    CADENA          shift and go to state 19
    CARACTER        shift and go to state 20
    MENOS           shift and go to state 21
    NOT             shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 25
    PARIZQ          shift and go to state 24

    expresion                      shift and go to state 120
    tostring                       shift and go to state 17
    toowned                        shift and go to state 18
    nativas_fun                    shift and go to state 26

state 116

    (2) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    PRINTLN         reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 117

    (16) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LLAVEDER        shift and go to state 121
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

    instruccion                    shift and go to state 9
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 118

    (15) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 122
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    OR              shift and go to state 42
    AND             shift and go to state 43
    PTO             shift and go to state 44


state 119

    (42) expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion . PARDER
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 123
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    OR              shift and go to state 42
    AND             shift and go to state 43
    PTO             shift and go to state 44


state 120

    (43) expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (35) expresion -> expresion . MAS expresion
    (36) expresion -> expresion . MENOS expresion
    (37) expresion -> expresion . POR expresion
    (38) expresion -> expresion . DIVIDIDO expresion
    (39) expresion -> expresion . MODULO expresion
    (44) expresion -> expresion . IGUALQUE expresion
    (45) expresion -> expresion . NOIGUALQUE expresion
    (46) expresion -> expresion . MENORQUE expresion
    (47) expresion -> expresion . MAYORQUE expresion
    (48) expresion -> expresion . MENORIQUE expresion
    (49) expresion -> expresion . MAYORIQUE expresion
    (50) expresion -> expresion . OR expresion
    (51) expresion -> expresion . AND expresion
    (31) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (32) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (55) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (56) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (57) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 124
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    MODULO          shift and go to state 35
    IGUALQUE        shift and go to state 36
    NOIGUALQUE      shift and go to state 37
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 39
    MENORIQUE       shift and go to state 40
    MAYORIQUE       shift and go to state 41
    OR              shift and go to state 42
    AND             shift and go to state 43
    PTO             shift and go to state 44


state 121

    (16) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 16 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 16 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 16 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 16 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 16 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 122

    (15) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 125
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 123

    (42) expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 42 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 124

    (43) expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 43 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 125

    (15) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (9) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (10) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (11) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else

    LLAVEDER        shift and go to state 126
    PRINTLN         shift and go to state 6
    IF              shift and go to state 7

    instruccion                    shift and go to state 9
    imprimir                       shift and go to state 4
    if                             shift and go to state 5

state 126

    (15) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 15 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 15 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 15 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 15 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 15 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 15 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 30 resolved as shift
WARNING: shift/reduce conflict for IF in state 30 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 94 resolved as shift
WARNING: shift/reduce conflict for IF in state 94 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 112 resolved as shift
WARNING: shift/reduce conflict for IF in state 112 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 122 resolved as shift
WARNING: shift/reduce conflict for IF in state 122 resolved as shift
