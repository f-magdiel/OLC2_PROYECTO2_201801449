Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPACITY
    CONTAINS
    DOSPT
    FOR
    ID
    IN
    INSERT
    LEN
    LET
    MUT
    NEW
    PUSH
    REMOVE
    RETURN
    SIGNOI
    STR
    VEC
    VVEC
    WITH_CAPACITY

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 3     instrucciones -> instrucciones instruccion
Rule 4     instrucciones -> instruccion
Rule 5     instrucciones -> <empty>
Rule 6     instruccion -> imprimir PTCOMA
Rule 7     instruccion -> if
Rule 8     instruccion -> while
Rule 9     instruccion -> continue PTCOMA
Rule 10    instruccion -> break PTCOMA
Rule 11    instruccion -> loop
Rule 12    instruccion -> match
Rule 13    imprimir -> PRINTLN NOT PARIZQ expresiones PARDER
Rule 14    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 15    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 16    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 17    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 18    lelseif -> lelseif elseif
Rule 19    lelseif -> elseif
Rule 20    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 21    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 22    match -> MATCH expresion LLAVEIZQ brazos LLAVEDER
Rule 23    brazos -> brazos brazo
Rule 24    brazos -> brazo
Rule 25    brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
Rule 26    brazo -> coincidencias IGUAL MAYORQUE instr_match COMA
Rule 27    coincidencias -> coincidencias BARRAS coincidencia
Rule 28    coincidencias -> coincidencia
Rule 29    coincidencia -> expresion
Rule 30    coincidencia -> GUIONB
Rule 31    instr_match -> imprimir
Rule 32    instr_match -> if
Rule 33    instr_match -> while
Rule 34    instr_match -> break
Rule 35    instr_match -> continue
Rule 36    instr_match -> loop
Rule 37    instr_match -> match
Rule 38    loop -> LOOP LLAVEIZQ instrucciones LLAVEDER
Rule 39    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 40    break -> BREAK
Rule 41    continue -> CONTINUE
Rule 42    tipo -> I64
Rule 43    tipo -> F64
Rule 44    tipo -> BOOL
Rule 45    tipo -> CHAR
Rule 46    tipo -> STRING
Rule 47    tipo -> USIZE
Rule 48    expresiones -> expresiones COMA expresion
Rule 49    expresiones -> expresion
Rule 50    expresiones -> <empty>
Rule 51    expresion -> ENTERO
Rule 52    expresion -> DECIMAL
Rule 53    expresion -> TRUE
Rule 54    expresion -> FALSE
Rule 55    expresion -> tostring
Rule 56    expresion -> toowned
Rule 57    tostring -> expresion PTO TOSTRING PARIZQ PARDER
Rule 58    toowned -> expresion PTO TOOWNED PARIZQ PARDER
Rule 59    expresion -> CADENA
Rule 60    expresion -> CARACTER
Rule 61    expresion -> expresion MAS expresion
Rule 62    expresion -> expresion MENOS expresion
Rule 63    expresion -> expresion POR expresion
Rule 64    expresion -> expresion DIVIDIDO expresion
Rule 65    expresion -> expresion MODULO expresion
Rule 66    expresion -> MENOS expresion
Rule 67    expresion -> NOT expresion
Rule 68    expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 69    expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 70    expresion -> expresion IGUALQUE expresion
Rule 71    expresion -> expresion NOIGUALQUE expresion
Rule 72    expresion -> expresion MENORQUE expresion
Rule 73    expresion -> expresion MAYORQUE expresion
Rule 74    expresion -> expresion MENORIQUE expresion
Rule 75    expresion -> expresion MAYORIQUE expresion
Rule 76    expresion -> expresion OR expresion
Rule 77    expresion -> expresion AND expresion
Rule 78    expresion -> PARIZQ expresion PARDER
Rule 79    expresion -> CORIZQ expresiones CORDER
Rule 80    expresion -> PARIZQ expresion AS tipo PARDER
Rule 81    expresion -> nativas_fun
Rule 82    nativas_fun -> expresion PTO ABS PARIZQ PARDER
Rule 83    nativas_fun -> expresion PTO SQRT PARIZQ PARDER
Rule 84    nativas_fun -> expresion PTO CLONE PARIZQ PARDER

Terminals, with rules where they appear

ABS                  : 82
AND                  : 77
AS                   : 80
BARRAS               : 27
BOOL                 : 44
BREAK                : 40
CADENA               : 59
CAPACITY             : 
CARACTER             : 60
CHAR                 : 45
CLONE                : 84
COMA                 : 26 48 68 69
CONTAINS             : 
CONTINUE             : 41
CORDER               : 79
CORIZQ               : 79
DDOSPT               : 68 69
DECIMAL              : 52
DIVIDIDO             : 64
DOSPT                : 
ELSE                 : 20 21
ENTERO               : 51
F64                  : 43 69
FALSE                : 54
FN                   : 2
FOR                  : 
GUIONB               : 30
I64                  : 42 68
ID                   : 
IF                   : 14 15 16 17 20
IGUAL                : 25 26
IGUALQUE             : 70
IN                   : 
INSERT               : 
LEN                  : 
LET                  : 
LLAVEDER             : 2 14 15 16 17 20 21 22 25 38 39
LLAVEIZQ             : 2 14 15 16 17 20 21 22 25 38 39
LOOP                 : 38
MAIN                 : 2
MAS                  : 61
MATCH                : 22
MAYORIQUE            : 75
MAYORQUE             : 25 26 73
MENORIQUE            : 74
MENORQUE             : 72
MENOS                : 62 66
MODULO               : 65
MUT                  : 
NEW                  : 
NOIGUALQUE           : 71
NOT                  : 13 67
OR                   : 76
PARDER               : 2 13 57 58 68 69 78 80 82 83 84
PARIZQ               : 2 13 57 58 68 69 78 80 82 83 84
POR                  : 63
POW                  : 68
POWF                 : 69
PRINTLN              : 13
PTCOMA               : 6 9 10
PTO                  : 57 58 82 83 84
PUSH                 : 
REMOVE               : 
RETURN               : 
SIGNOI               : 
SQRT                 : 83
STR                  : 
STRING               : 46
TOOWNED              : 58
TOSTRING             : 57
TRUE                 : 53
USIZE                : 47
VEC                  : 
VVEC                 : 
WHILE                : 39
WITH_CAPACITY        : 
error                : 

Nonterminals, with rules where they appear

brazo                : 23 24
brazos               : 22 23
break                : 10 34
coincidencia         : 27 28
coincidencias        : 25 26 27
continue             : 9 35
else                 : 15 17
elseif               : 18 19
expresion            : 14 15 16 17 20 22 29 39 48 49 57 58 61 61 62 62 63 63 64 64 65 65 66 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 80 82 83 84
expresiones          : 13 48 79
if                   : 7 32
imprimir             : 6 31
inicio               : 0
instr_match          : 26
instruccion          : 3 4
instrucciones        : 1 1 2 3 14 15 16 17 20 21 25 38 39
lelseif              : 16 17 18
loop                 : 11 36
main                 : 1
match                : 12 37
nativas_fun          : 81
tipo                 : 80
toowned              : 56
tostring             : 55
while                : 8 33

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
    FN              reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]
  ! LOOP            [ reduce using rule 5 (instrucciones -> .) ]
  ! MATCH           [ reduce using rule 5 (instrucciones -> .) ]

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (3) instrucciones -> instrucciones . instruccion
    (2) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    FN              shift and go to state 20
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    main                           shift and go to state 18
    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 3

    (4) instrucciones -> instruccion .

    FN              reduce using rule 4 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instruccion .)
    IF              reduce using rule 4 (instrucciones -> instruccion .)
    WHILE           reduce using rule 4 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 4 (instrucciones -> instruccion .)
    BREAK           reduce using rule 4 (instrucciones -> instruccion .)
    LOOP            reduce using rule 4 (instrucciones -> instruccion .)
    MATCH           reduce using rule 4 (instrucciones -> instruccion .)
    $end            reduce using rule 4 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instruccion .)


state 4

    (6) instruccion -> imprimir . PTCOMA

    PTCOMA          shift and go to state 21


state 5

    (7) instruccion -> if .

    FN              reduce using rule 7 (instruccion -> if .)
    PRINTLN         reduce using rule 7 (instruccion -> if .)
    IF              reduce using rule 7 (instruccion -> if .)
    WHILE           reduce using rule 7 (instruccion -> if .)
    CONTINUE        reduce using rule 7 (instruccion -> if .)
    BREAK           reduce using rule 7 (instruccion -> if .)
    LOOP            reduce using rule 7 (instruccion -> if .)
    MATCH           reduce using rule 7 (instruccion -> if .)
    $end            reduce using rule 7 (instruccion -> if .)
    LLAVEDER        reduce using rule 7 (instruccion -> if .)


state 6

    (8) instruccion -> while .

    FN              reduce using rule 8 (instruccion -> while .)
    PRINTLN         reduce using rule 8 (instruccion -> while .)
    IF              reduce using rule 8 (instruccion -> while .)
    WHILE           reduce using rule 8 (instruccion -> while .)
    CONTINUE        reduce using rule 8 (instruccion -> while .)
    BREAK           reduce using rule 8 (instruccion -> while .)
    LOOP            reduce using rule 8 (instruccion -> while .)
    MATCH           reduce using rule 8 (instruccion -> while .)
    $end            reduce using rule 8 (instruccion -> while .)
    LLAVEDER        reduce using rule 8 (instruccion -> while .)


state 7

    (9) instruccion -> continue . PTCOMA

    PTCOMA          shift and go to state 22


state 8

    (10) instruccion -> break . PTCOMA

    PTCOMA          shift and go to state 23


state 9

    (11) instruccion -> loop .

    FN              reduce using rule 11 (instruccion -> loop .)
    PRINTLN         reduce using rule 11 (instruccion -> loop .)
    IF              reduce using rule 11 (instruccion -> loop .)
    WHILE           reduce using rule 11 (instruccion -> loop .)
    CONTINUE        reduce using rule 11 (instruccion -> loop .)
    BREAK           reduce using rule 11 (instruccion -> loop .)
    LOOP            reduce using rule 11 (instruccion -> loop .)
    MATCH           reduce using rule 11 (instruccion -> loop .)
    $end            reduce using rule 11 (instruccion -> loop .)
    LLAVEDER        reduce using rule 11 (instruccion -> loop .)


state 10

    (12) instruccion -> match .

    FN              reduce using rule 12 (instruccion -> match .)
    PRINTLN         reduce using rule 12 (instruccion -> match .)
    IF              reduce using rule 12 (instruccion -> match .)
    WHILE           reduce using rule 12 (instruccion -> match .)
    CONTINUE        reduce using rule 12 (instruccion -> match .)
    BREAK           reduce using rule 12 (instruccion -> match .)
    LOOP            reduce using rule 12 (instruccion -> match .)
    MATCH           reduce using rule 12 (instruccion -> match .)
    $end            reduce using rule 12 (instruccion -> match .)
    LLAVEDER        reduce using rule 12 (instruccion -> match .)


state 11

    (13) imprimir -> PRINTLN . NOT PARIZQ expresiones PARDER

    NOT             shift and go to state 24


state 12

    (14) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 25
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 13

    (39) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 41
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 14

    (41) continue -> CONTINUE .

    PTCOMA          reduce using rule 41 (continue -> CONTINUE .)
    COMA            reduce using rule 41 (continue -> CONTINUE .)


state 15

    (40) break -> BREAK .

    PTCOMA          reduce using rule 40 (break -> BREAK .)
    COMA            reduce using rule 40 (break -> BREAK .)


state 16

    (38) loop -> LOOP . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 42


state 17

    (22) match -> MATCH . expresion LLAVEIZQ brazos LLAVEDER
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 43
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 18

    (1) inicio -> instrucciones main . instrucciones
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
    $end            reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]
  ! LOOP            [ reduce using rule 5 (instrucciones -> .) ]
  ! MATCH           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 44
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 19

    (3) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 3 (instrucciones -> instrucciones instruccion .)


state 20

    (2) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 45


state 21

    (6) instruccion -> imprimir PTCOMA .

    FN              reduce using rule 6 (instruccion -> imprimir PTCOMA .)
    PRINTLN         reduce using rule 6 (instruccion -> imprimir PTCOMA .)
    IF              reduce using rule 6 (instruccion -> imprimir PTCOMA .)
    WHILE           reduce using rule 6 (instruccion -> imprimir PTCOMA .)
    CONTINUE        reduce using rule 6 (instruccion -> imprimir PTCOMA .)
    BREAK           reduce using rule 6 (instruccion -> imprimir PTCOMA .)
    LOOP            reduce using rule 6 (instruccion -> imprimir PTCOMA .)
    MATCH           reduce using rule 6 (instruccion -> imprimir PTCOMA .)
    $end            reduce using rule 6 (instruccion -> imprimir PTCOMA .)
    LLAVEDER        reduce using rule 6 (instruccion -> imprimir PTCOMA .)


state 22

    (9) instruccion -> continue PTCOMA .

    FN              reduce using rule 9 (instruccion -> continue PTCOMA .)
    PRINTLN         reduce using rule 9 (instruccion -> continue PTCOMA .)
    IF              reduce using rule 9 (instruccion -> continue PTCOMA .)
    WHILE           reduce using rule 9 (instruccion -> continue PTCOMA .)
    CONTINUE        reduce using rule 9 (instruccion -> continue PTCOMA .)
    BREAK           reduce using rule 9 (instruccion -> continue PTCOMA .)
    LOOP            reduce using rule 9 (instruccion -> continue PTCOMA .)
    MATCH           reduce using rule 9 (instruccion -> continue PTCOMA .)
    $end            reduce using rule 9 (instruccion -> continue PTCOMA .)
    LLAVEDER        reduce using rule 9 (instruccion -> continue PTCOMA .)


state 23

    (10) instruccion -> break PTCOMA .

    FN              reduce using rule 10 (instruccion -> break PTCOMA .)
    PRINTLN         reduce using rule 10 (instruccion -> break PTCOMA .)
    IF              reduce using rule 10 (instruccion -> break PTCOMA .)
    WHILE           reduce using rule 10 (instruccion -> break PTCOMA .)
    CONTINUE        reduce using rule 10 (instruccion -> break PTCOMA .)
    BREAK           reduce using rule 10 (instruccion -> break PTCOMA .)
    LOOP            reduce using rule 10 (instruccion -> break PTCOMA .)
    MATCH           reduce using rule 10 (instruccion -> break PTCOMA .)
    $end            reduce using rule 10 (instruccion -> break PTCOMA .)
    LLAVEDER        reduce using rule 10 (instruccion -> break PTCOMA .)


state 24

    (13) imprimir -> PRINTLN NOT . PARIZQ expresiones PARDER

    PARIZQ          shift and go to state 46


state 25

    (14) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (15) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 26

    (51) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 51 (expresion -> ENTERO .)
    MAS             reduce using rule 51 (expresion -> ENTERO .)
    MENOS           reduce using rule 51 (expresion -> ENTERO .)
    POR             reduce using rule 51 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 51 (expresion -> ENTERO .)
    MODULO          reduce using rule 51 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 51 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 51 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 51 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 51 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 51 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 51 (expresion -> ENTERO .)
    OR              reduce using rule 51 (expresion -> ENTERO .)
    AND             reduce using rule 51 (expresion -> ENTERO .)
    PTO             reduce using rule 51 (expresion -> ENTERO .)
    PARDER          reduce using rule 51 (expresion -> ENTERO .)
    AS              reduce using rule 51 (expresion -> ENTERO .)
    CORDER          reduce using rule 51 (expresion -> ENTERO .)
    COMA            reduce using rule 51 (expresion -> ENTERO .)
    IGUAL           reduce using rule 51 (expresion -> ENTERO .)
    BARRAS          reduce using rule 51 (expresion -> ENTERO .)


state 27

    (52) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 52 (expresion -> DECIMAL .)
    MAS             reduce using rule 52 (expresion -> DECIMAL .)
    MENOS           reduce using rule 52 (expresion -> DECIMAL .)
    POR             reduce using rule 52 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 52 (expresion -> DECIMAL .)
    MODULO          reduce using rule 52 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 52 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 52 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 52 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 52 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 52 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 52 (expresion -> DECIMAL .)
    OR              reduce using rule 52 (expresion -> DECIMAL .)
    AND             reduce using rule 52 (expresion -> DECIMAL .)
    PTO             reduce using rule 52 (expresion -> DECIMAL .)
    PARDER          reduce using rule 52 (expresion -> DECIMAL .)
    AS              reduce using rule 52 (expresion -> DECIMAL .)
    CORDER          reduce using rule 52 (expresion -> DECIMAL .)
    COMA            reduce using rule 52 (expresion -> DECIMAL .)
    IGUAL           reduce using rule 52 (expresion -> DECIMAL .)
    BARRAS          reduce using rule 52 (expresion -> DECIMAL .)


state 28

    (53) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 53 (expresion -> TRUE .)
    MAS             reduce using rule 53 (expresion -> TRUE .)
    MENOS           reduce using rule 53 (expresion -> TRUE .)
    POR             reduce using rule 53 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 53 (expresion -> TRUE .)
    MODULO          reduce using rule 53 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 53 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 53 (expresion -> TRUE .)
    MENORQUE        reduce using rule 53 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 53 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 53 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 53 (expresion -> TRUE .)
    OR              reduce using rule 53 (expresion -> TRUE .)
    AND             reduce using rule 53 (expresion -> TRUE .)
    PTO             reduce using rule 53 (expresion -> TRUE .)
    PARDER          reduce using rule 53 (expresion -> TRUE .)
    AS              reduce using rule 53 (expresion -> TRUE .)
    CORDER          reduce using rule 53 (expresion -> TRUE .)
    COMA            reduce using rule 53 (expresion -> TRUE .)
    IGUAL           reduce using rule 53 (expresion -> TRUE .)
    BARRAS          reduce using rule 53 (expresion -> TRUE .)


state 29

    (54) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 54 (expresion -> FALSE .)
    MAS             reduce using rule 54 (expresion -> FALSE .)
    MENOS           reduce using rule 54 (expresion -> FALSE .)
    POR             reduce using rule 54 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 54 (expresion -> FALSE .)
    MODULO          reduce using rule 54 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 54 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 54 (expresion -> FALSE .)
    MENORQUE        reduce using rule 54 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 54 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 54 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 54 (expresion -> FALSE .)
    OR              reduce using rule 54 (expresion -> FALSE .)
    AND             reduce using rule 54 (expresion -> FALSE .)
    PTO             reduce using rule 54 (expresion -> FALSE .)
    PARDER          reduce using rule 54 (expresion -> FALSE .)
    AS              reduce using rule 54 (expresion -> FALSE .)
    CORDER          reduce using rule 54 (expresion -> FALSE .)
    COMA            reduce using rule 54 (expresion -> FALSE .)
    IGUAL           reduce using rule 54 (expresion -> FALSE .)
    BARRAS          reduce using rule 54 (expresion -> FALSE .)


state 30

    (55) expresion -> tostring .

    LLAVEIZQ        reduce using rule 55 (expresion -> tostring .)
    MAS             reduce using rule 55 (expresion -> tostring .)
    MENOS           reduce using rule 55 (expresion -> tostring .)
    POR             reduce using rule 55 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 55 (expresion -> tostring .)
    MODULO          reduce using rule 55 (expresion -> tostring .)
    IGUALQUE        reduce using rule 55 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 55 (expresion -> tostring .)
    MENORQUE        reduce using rule 55 (expresion -> tostring .)
    MAYORQUE        reduce using rule 55 (expresion -> tostring .)
    MENORIQUE       reduce using rule 55 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 55 (expresion -> tostring .)
    OR              reduce using rule 55 (expresion -> tostring .)
    AND             reduce using rule 55 (expresion -> tostring .)
    PTO             reduce using rule 55 (expresion -> tostring .)
    PARDER          reduce using rule 55 (expresion -> tostring .)
    AS              reduce using rule 55 (expresion -> tostring .)
    CORDER          reduce using rule 55 (expresion -> tostring .)
    COMA            reduce using rule 55 (expresion -> tostring .)
    IGUAL           reduce using rule 55 (expresion -> tostring .)
    BARRAS          reduce using rule 55 (expresion -> tostring .)


state 31

    (56) expresion -> toowned .

    LLAVEIZQ        reduce using rule 56 (expresion -> toowned .)
    MAS             reduce using rule 56 (expresion -> toowned .)
    MENOS           reduce using rule 56 (expresion -> toowned .)
    POR             reduce using rule 56 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 56 (expresion -> toowned .)
    MODULO          reduce using rule 56 (expresion -> toowned .)
    IGUALQUE        reduce using rule 56 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 56 (expresion -> toowned .)
    MENORQUE        reduce using rule 56 (expresion -> toowned .)
    MAYORQUE        reduce using rule 56 (expresion -> toowned .)
    MENORIQUE       reduce using rule 56 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 56 (expresion -> toowned .)
    OR              reduce using rule 56 (expresion -> toowned .)
    AND             reduce using rule 56 (expresion -> toowned .)
    PTO             reduce using rule 56 (expresion -> toowned .)
    PARDER          reduce using rule 56 (expresion -> toowned .)
    AS              reduce using rule 56 (expresion -> toowned .)
    CORDER          reduce using rule 56 (expresion -> toowned .)
    COMA            reduce using rule 56 (expresion -> toowned .)
    IGUAL           reduce using rule 56 (expresion -> toowned .)
    BARRAS          reduce using rule 56 (expresion -> toowned .)


state 32

    (59) expresion -> CADENA .

    LLAVEIZQ        reduce using rule 59 (expresion -> CADENA .)
    MAS             reduce using rule 59 (expresion -> CADENA .)
    MENOS           reduce using rule 59 (expresion -> CADENA .)
    POR             reduce using rule 59 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 59 (expresion -> CADENA .)
    MODULO          reduce using rule 59 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 59 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 59 (expresion -> CADENA .)
    MENORQUE        reduce using rule 59 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 59 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 59 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 59 (expresion -> CADENA .)
    OR              reduce using rule 59 (expresion -> CADENA .)
    AND             reduce using rule 59 (expresion -> CADENA .)
    PTO             reduce using rule 59 (expresion -> CADENA .)
    PARDER          reduce using rule 59 (expresion -> CADENA .)
    AS              reduce using rule 59 (expresion -> CADENA .)
    CORDER          reduce using rule 59 (expresion -> CADENA .)
    COMA            reduce using rule 59 (expresion -> CADENA .)
    IGUAL           reduce using rule 59 (expresion -> CADENA .)
    BARRAS          reduce using rule 59 (expresion -> CADENA .)


state 33

    (60) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 60 (expresion -> CARACTER .)
    MAS             reduce using rule 60 (expresion -> CARACTER .)
    MENOS           reduce using rule 60 (expresion -> CARACTER .)
    POR             reduce using rule 60 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 60 (expresion -> CARACTER .)
    MODULO          reduce using rule 60 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 60 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 60 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 60 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 60 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 60 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 60 (expresion -> CARACTER .)
    OR              reduce using rule 60 (expresion -> CARACTER .)
    AND             reduce using rule 60 (expresion -> CARACTER .)
    PTO             reduce using rule 60 (expresion -> CARACTER .)
    PARDER          reduce using rule 60 (expresion -> CARACTER .)
    AS              reduce using rule 60 (expresion -> CARACTER .)
    CORDER          reduce using rule 60 (expresion -> CARACTER .)
    COMA            reduce using rule 60 (expresion -> CARACTER .)
    IGUAL           reduce using rule 60 (expresion -> CARACTER .)
    BARRAS          reduce using rule 60 (expresion -> CARACTER .)


state 34

    (66) expresion -> MENOS . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 62
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 35

    (67) expresion -> NOT . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 63
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 36

    (68) expresion -> I64 . DDOSPT POW PARIZQ expresion COMA expresion PARDER

    DDOSPT          shift and go to state 64


state 37

    (78) expresion -> PARIZQ . expresion PARDER
    (80) expresion -> PARIZQ . expresion AS tipo PARDER
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 65
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 38

    (69) expresion -> F64 . DDOSPT POWF PARIZQ expresion COMA expresion PARDER

    DDOSPT          shift and go to state 66


state 39

    (79) expresion -> CORIZQ . expresiones CORDER
    (48) expresiones -> . expresiones COMA expresion
    (49) expresiones -> . expresion
    (50) expresiones -> .
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    CORDER          reduce using rule 50 (expresiones -> .)
    COMA            reduce using rule 50 (expresiones -> .)
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresiones                    shift and go to state 67
    expresion                      shift and go to state 68
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 40

    (81) expresion -> nativas_fun .

    LLAVEIZQ        reduce using rule 81 (expresion -> nativas_fun .)
    MAS             reduce using rule 81 (expresion -> nativas_fun .)
    MENOS           reduce using rule 81 (expresion -> nativas_fun .)
    POR             reduce using rule 81 (expresion -> nativas_fun .)
    DIVIDIDO        reduce using rule 81 (expresion -> nativas_fun .)
    MODULO          reduce using rule 81 (expresion -> nativas_fun .)
    IGUALQUE        reduce using rule 81 (expresion -> nativas_fun .)
    NOIGUALQUE      reduce using rule 81 (expresion -> nativas_fun .)
    MENORQUE        reduce using rule 81 (expresion -> nativas_fun .)
    MAYORQUE        reduce using rule 81 (expresion -> nativas_fun .)
    MENORIQUE       reduce using rule 81 (expresion -> nativas_fun .)
    MAYORIQUE       reduce using rule 81 (expresion -> nativas_fun .)
    OR              reduce using rule 81 (expresion -> nativas_fun .)
    AND             reduce using rule 81 (expresion -> nativas_fun .)
    PTO             reduce using rule 81 (expresion -> nativas_fun .)
    PARDER          reduce using rule 81 (expresion -> nativas_fun .)
    AS              reduce using rule 81 (expresion -> nativas_fun .)
    CORDER          reduce using rule 81 (expresion -> nativas_fun .)
    COMA            reduce using rule 81 (expresion -> nativas_fun .)
    IGUAL           reduce using rule 81 (expresion -> nativas_fun .)
    BARRAS          reduce using rule 81 (expresion -> nativas_fun .)


state 41

    (39) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 69
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 42

    (38) loop -> LOOP LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]
  ! LOOP            [ reduce using rule 5 (instrucciones -> .) ]
  ! MATCH           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 70
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 43

    (22) match -> MATCH expresion . LLAVEIZQ brazos LLAVEDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 71
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 44

    (1) inicio -> instrucciones main instrucciones .
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 45

    (2) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 72


state 46

    (13) imprimir -> PRINTLN NOT PARIZQ . expresiones PARDER
    (48) expresiones -> . expresiones COMA expresion
    (49) expresiones -> . expresion
    (50) expresiones -> .
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    PARDER          reduce using rule 50 (expresiones -> .)
    COMA            reduce using rule 50 (expresiones -> .)
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresiones                    shift and go to state 73
    expresion                      shift and go to state 68
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 47

    (14) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (15) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (16) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (17) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]
  ! LOOP            [ reduce using rule 5 (instrucciones -> .) ]
  ! MATCH           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 74
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 48

    (61) expresion -> expresion MAS . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 75
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 49

    (62) expresion -> expresion MENOS . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 76
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 50

    (63) expresion -> expresion POR . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 77
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 51

    (64) expresion -> expresion DIVIDIDO . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 78
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 52

    (65) expresion -> expresion MODULO . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 79
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 53

    (70) expresion -> expresion IGUALQUE . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 80
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 54

    (71) expresion -> expresion NOIGUALQUE . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 81
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 55

    (72) expresion -> expresion MENORQUE . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 82
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 56

    (73) expresion -> expresion MAYORQUE . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 83
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 57

    (74) expresion -> expresion MENORIQUE . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 84
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 58

    (75) expresion -> expresion MAYORIQUE . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 85
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 59

    (76) expresion -> expresion OR . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 86
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 60

    (77) expresion -> expresion AND . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 87
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 61

    (57) tostring -> expresion PTO . TOSTRING PARIZQ PARDER
    (58) toowned -> expresion PTO . TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (83) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    TOSTRING        shift and go to state 88
    TOOWNED         shift and go to state 89
    ABS             shift and go to state 90
    SQRT            shift and go to state 91
    CLONE           shift and go to state 92


state 62

    (66) expresion -> MENOS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 66 (expresion -> MENOS expresion .)
    MAS             reduce using rule 66 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 66 (expresion -> MENOS expresion .)
    POR             reduce using rule 66 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 66 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 66 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 66 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 66 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 66 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 66 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 66 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 66 (expresion -> MENOS expresion .)
    OR              reduce using rule 66 (expresion -> MENOS expresion .)
    AND             reduce using rule 66 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 66 (expresion -> MENOS expresion .)
    AS              reduce using rule 66 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 66 (expresion -> MENOS expresion .)
    COMA            reduce using rule 66 (expresion -> MENOS expresion .)
    IGUAL           reduce using rule 66 (expresion -> MENOS expresion .)
    BARRAS          reduce using rule 66 (expresion -> MENOS expresion .)
    PTO             shift and go to state 61

  ! PTO             [ reduce using rule 66 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 63

    (67) expresion -> NOT expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 67 (expresion -> NOT expresion .)
    MAS             reduce using rule 67 (expresion -> NOT expresion .)
    MENOS           reduce using rule 67 (expresion -> NOT expresion .)
    POR             reduce using rule 67 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 67 (expresion -> NOT expresion .)
    MODULO          reduce using rule 67 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 67 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 67 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 67 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 67 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 67 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 67 (expresion -> NOT expresion .)
    OR              reduce using rule 67 (expresion -> NOT expresion .)
    AND             reduce using rule 67 (expresion -> NOT expresion .)
    PARDER          reduce using rule 67 (expresion -> NOT expresion .)
    AS              reduce using rule 67 (expresion -> NOT expresion .)
    CORDER          reduce using rule 67 (expresion -> NOT expresion .)
    COMA            reduce using rule 67 (expresion -> NOT expresion .)
    IGUAL           reduce using rule 67 (expresion -> NOT expresion .)
    BARRAS          reduce using rule 67 (expresion -> NOT expresion .)
    PTO             shift and go to state 61

  ! PTO             [ reduce using rule 67 (expresion -> NOT expresion .) ]
  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 64

    (68) expresion -> I64 DDOSPT . POW PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 93


state 65

    (78) expresion -> PARIZQ expresion . PARDER
    (80) expresion -> PARIZQ expresion . AS tipo PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 94
    AS              shift and go to state 95
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 66

    (69) expresion -> F64 DDOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POWF            shift and go to state 96


state 67

    (79) expresion -> CORIZQ expresiones . CORDER
    (48) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 97
    COMA            shift and go to state 98


state 68

    (49) expresiones -> expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          reduce using rule 49 (expresiones -> expresion .)
    COMA            reduce using rule 49 (expresiones -> expresion .)
    PARDER          reduce using rule 49 (expresiones -> expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 69

    (39) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]
  ! LOOP            [ reduce using rule 5 (instrucciones -> .) ]
  ! MATCH           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 99
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 70

    (38) loop -> LOOP LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    LLAVEDER        shift and go to state 100
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 71

    (22) match -> MATCH expresion LLAVEIZQ . brazos LLAVEDER
    (23) brazos -> . brazos brazo
    (24) brazos -> . brazo
    (25) brazo -> . coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (26) brazo -> . coincidencias IGUAL MAYORQUE instr_match COMA
    (27) coincidencias -> . coincidencias BARRAS coincidencia
    (28) coincidencias -> . coincidencia
    (29) coincidencia -> . expresion
    (30) coincidencia -> . GUIONB
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    GUIONB          shift and go to state 106
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 101
    brazos                         shift and go to state 102
    brazo                          shift and go to state 103
    coincidencias                  shift and go to state 104
    coincidencia                   shift and go to state 105
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 72

    (2) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 107


state 73

    (13) imprimir -> PRINTLN NOT PARIZQ expresiones . PARDER
    (48) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 108
    COMA            shift and go to state 98


state 74

    (14) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (15) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (16) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (17) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    LLAVEDER        shift and go to state 109
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 75

    (61) expresion -> expresion MAS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 61 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 61 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 61 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 61 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 61 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 61 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 61 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 61 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 61 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 61 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 61 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 61 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 61 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 61 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 61 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 61 (expresion -> expresion MAS expresion .)
    BARRAS          reduce using rule 61 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    PTO             shift and go to state 61

  ! POR             [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! PTO             [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 76

    (62) expresion -> expresion MENOS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 62 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 62 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 62 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 62 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 62 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 62 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    BARRAS          reduce using rule 62 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    PTO             shift and go to state 61

  ! POR             [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! PTO             [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 77

    (63) expresion -> expresion POR expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 63 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 63 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 63 (expresion -> expresion POR expresion .)
    POR             reduce using rule 63 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 63 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 63 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 63 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 63 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 63 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 63 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 63 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 63 (expresion -> expresion POR expresion .)
    OR              reduce using rule 63 (expresion -> expresion POR expresion .)
    AND             reduce using rule 63 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 63 (expresion -> expresion POR expresion .)
    AS              reduce using rule 63 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 63 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 63 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 63 (expresion -> expresion POR expresion .)
    BARRAS          reduce using rule 63 (expresion -> expresion POR expresion .)
    PTO             shift and go to state 61

  ! PTO             [ reduce using rule 63 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 78

    (64) expresion -> expresion DIVIDIDO expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    AS              reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    IGUAL           reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    BARRAS          reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .)
    PTO             shift and go to state 61

  ! PTO             [ reduce using rule 64 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 79

    (65) expresion -> expresion MODULO expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 65 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 65 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 65 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 65 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    BARRAS          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PTO             shift and go to state 61

  ! PTO             [ reduce using rule 65 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! MODULO          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 80

    (70) expresion -> expresion IGUALQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    AS              reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    CORDER          reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    IGUAL           reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    BARRAS          reduce using rule 70 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    PTO             shift and go to state 61

  ! MAS             [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! PTO             [ reduce using rule 70 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 81

    (71) expresion -> expresion NOIGUALQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    AS              reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    CORDER          reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    IGUAL           reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    BARRAS          reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    PTO             shift and go to state 61

  ! MAS             [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! PTO             [ reduce using rule 71 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 82

    (72) expresion -> expresion MENORQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    AS              reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    CORDER          reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    IGUAL           reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    BARRAS          reduce using rule 72 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    PTO             shift and go to state 61

  ! MAS             [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! PTO             [ reduce using rule 72 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 83

    (73) expresion -> expresion MAYORQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    AS              reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    CORDER          reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    IGUAL           reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    BARRAS          reduce using rule 73 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    PTO             shift and go to state 61

  ! MAS             [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! PTO             [ reduce using rule 73 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 84

    (74) expresion -> expresion MENORIQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    AS              reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    CORDER          reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    IGUAL           reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    BARRAS          reduce using rule 74 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    PTO             shift and go to state 61

  ! MAS             [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! PTO             [ reduce using rule 74 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 85

    (75) expresion -> expresion MAYORIQUE expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    AS              reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    CORDER          reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    IGUAL           reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    BARRAS          reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    PTO             shift and go to state 61

  ! MAS             [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! PTO             [ reduce using rule 75 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NOIGUALQUE      [ shift and go to state 54 ]
  ! MENORQUE        [ shift and go to state 55 ]
  ! MAYORQUE        [ shift and go to state 56 ]
  ! MENORIQUE       [ shift and go to state 57 ]
  ! MAYORIQUE       [ shift and go to state 58 ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 86

    (76) expresion -> expresion OR expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 76 (expresion -> expresion OR expresion .)
    OR              reduce using rule 76 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 76 (expresion -> expresion OR expresion .)
    AS              reduce using rule 76 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 76 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 76 (expresion -> expresion OR expresion .)
    IGUAL           reduce using rule 76 (expresion -> expresion OR expresion .)
    BARRAS          reduce using rule 76 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    AND             shift and go to state 60
    PTO             shift and go to state 61

  ! MAS             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! PTO             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 59 ]


state 87

    (77) expresion -> expresion AND expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 77 (expresion -> expresion AND expresion .)
    OR              reduce using rule 77 (expresion -> expresion AND expresion .)
    AND             reduce using rule 77 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 77 (expresion -> expresion AND expresion .)
    AS              reduce using rule 77 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 77 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 77 (expresion -> expresion AND expresion .)
    IGUAL           reduce using rule 77 (expresion -> expresion AND expresion .)
    BARRAS          reduce using rule 77 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    PTO             shift and go to state 61

  ! MAS             [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! PTO             [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]


state 88

    (57) tostring -> expresion PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 110


state 89

    (58) toowned -> expresion PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 111


state 90

    (82) nativas_fun -> expresion PTO ABS . PARIZQ PARDER

    PARIZQ          shift and go to state 112


state 91

    (83) nativas_fun -> expresion PTO SQRT . PARIZQ PARDER

    PARIZQ          shift and go to state 113


state 92

    (84) nativas_fun -> expresion PTO CLONE . PARIZQ PARDER

    PARIZQ          shift and go to state 114


state 93

    (68) expresion -> I64 DDOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 115


state 94

    (78) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    AS              reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)
    BARRAS          reduce using rule 78 (expresion -> PARIZQ expresion PARDER .)


state 95

    (80) expresion -> PARIZQ expresion AS . tipo PARDER
    (42) tipo -> . I64
    (43) tipo -> . F64
    (44) tipo -> . BOOL
    (45) tipo -> . CHAR
    (46) tipo -> . STRING
    (47) tipo -> . USIZE

    I64             shift and go to state 117
    F64             shift and go to state 118
    BOOL            shift and go to state 119
    CHAR            shift and go to state 120
    STRING          shift and go to state 121
    USIZE           shift and go to state 122

    tipo                           shift and go to state 116

state 96

    (69) expresion -> F64 DDOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 123


state 97

    (79) expresion -> CORIZQ expresiones CORDER .

    LLAVEIZQ        reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    MAS             reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    POR             reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    DIVIDIDO        reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    IGUALQUE        reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    NOIGUALQUE      reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    MENORQUE        reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    MAYORQUE        reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    MENORIQUE       reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    MAYORIQUE       reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    OR              reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    AND             reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    PTO             reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    AS              reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    COMA            reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    IGUAL           reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)
    BARRAS          reduce using rule 79 (expresion -> CORIZQ expresiones CORDER .)


state 98

    (48) expresiones -> expresiones COMA . expresion
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 124
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 99

    (39) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    LLAVEDER        shift and go to state 125
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 100

    (38) loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 38 (loop -> LOOP LLAVEIZQ instrucciones LLAVEDER .)


state 101

    (29) coincidencia -> expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    IGUAL           reduce using rule 29 (coincidencia -> expresion .)
    BARRAS          reduce using rule 29 (coincidencia -> expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 102

    (22) match -> MATCH expresion LLAVEIZQ brazos . LLAVEDER
    (23) brazos -> brazos . brazo
    (25) brazo -> . coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (26) brazo -> . coincidencias IGUAL MAYORQUE instr_match COMA
    (27) coincidencias -> . coincidencias BARRAS coincidencia
    (28) coincidencias -> . coincidencia
    (29) coincidencia -> . expresion
    (30) coincidencia -> . GUIONB
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    LLAVEDER        shift and go to state 126
    GUIONB          shift and go to state 106
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 101
    brazo                          shift and go to state 127
    coincidencias                  shift and go to state 104
    coincidencia                   shift and go to state 105
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 103

    (24) brazos -> brazo .

    LLAVEDER        reduce using rule 24 (brazos -> brazo .)
    GUIONB          reduce using rule 24 (brazos -> brazo .)
    ENTERO          reduce using rule 24 (brazos -> brazo .)
    DECIMAL         reduce using rule 24 (brazos -> brazo .)
    TRUE            reduce using rule 24 (brazos -> brazo .)
    FALSE           reduce using rule 24 (brazos -> brazo .)
    CADENA          reduce using rule 24 (brazos -> brazo .)
    CARACTER        reduce using rule 24 (brazos -> brazo .)
    MENOS           reduce using rule 24 (brazos -> brazo .)
    NOT             reduce using rule 24 (brazos -> brazo .)
    I64             reduce using rule 24 (brazos -> brazo .)
    F64             reduce using rule 24 (brazos -> brazo .)
    PARIZQ          reduce using rule 24 (brazos -> brazo .)
    CORIZQ          reduce using rule 24 (brazos -> brazo .)


state 104

    (25) brazo -> coincidencias . IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (26) brazo -> coincidencias . IGUAL MAYORQUE instr_match COMA
    (27) coincidencias -> coincidencias . BARRAS coincidencia

    IGUAL           shift and go to state 128
    BARRAS          shift and go to state 129


state 105

    (28) coincidencias -> coincidencia .

    IGUAL           reduce using rule 28 (coincidencias -> coincidencia .)
    BARRAS          reduce using rule 28 (coincidencias -> coincidencia .)


state 106

    (30) coincidencia -> GUIONB .

    IGUAL           reduce using rule 30 (coincidencia -> GUIONB .)
    BARRAS          reduce using rule 30 (coincidencia -> GUIONB .)


state 107

    (2) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 130


state 108

    (13) imprimir -> PRINTLN NOT PARIZQ expresiones PARDER .

    PTCOMA          reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER .)
    COMA            reduce using rule 13 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER .)


state 109

    (14) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (15) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (16) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (17) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (21) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (18) lelseif -> . lelseif elseif
    (19) lelseif -> . elseif
    (20) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 133

    else                           shift and go to state 131
    lelseif                        shift and go to state 132
    elseif                         shift and go to state 134

state 110

    (57) tostring -> expresion PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 135


state 111

    (58) toowned -> expresion PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 136


state 112

    (82) nativas_fun -> expresion PTO ABS PARIZQ . PARDER

    PARDER          shift and go to state 137


state 113

    (83) nativas_fun -> expresion PTO SQRT PARIZQ . PARDER

    PARDER          shift and go to state 138


state 114

    (84) nativas_fun -> expresion PTO CLONE PARIZQ . PARDER

    PARDER          shift and go to state 139


state 115

    (68) expresion -> I64 DDOSPT POW PARIZQ . expresion COMA expresion PARDER
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 140
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 116

    (80) expresion -> PARIZQ expresion AS tipo . PARDER

    PARDER          shift and go to state 141


state 117

    (42) tipo -> I64 .

    PARDER          reduce using rule 42 (tipo -> I64 .)


state 118

    (43) tipo -> F64 .

    PARDER          reduce using rule 43 (tipo -> F64 .)


state 119

    (44) tipo -> BOOL .

    PARDER          reduce using rule 44 (tipo -> BOOL .)


state 120

    (45) tipo -> CHAR .

    PARDER          reduce using rule 45 (tipo -> CHAR .)


state 121

    (46) tipo -> STRING .

    PARDER          reduce using rule 46 (tipo -> STRING .)


state 122

    (47) tipo -> USIZE .

    PARDER          reduce using rule 47 (tipo -> USIZE .)


state 123

    (69) expresion -> F64 DDOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 142
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 124

    (48) expresiones -> expresiones COMA expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    CORDER          reduce using rule 48 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 48 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 48 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 125

    (39) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 39 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 126

    (22) match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .

    FN              reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    PRINTLN         reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    IF              reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    WHILE           reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    CONTINUE        reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    BREAK           reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    LOOP            reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    MATCH           reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    $end            reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    LLAVEDER        reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)
    COMA            reduce using rule 22 (match -> MATCH expresion LLAVEIZQ brazos LLAVEDER .)


state 127

    (23) brazos -> brazos brazo .

    LLAVEDER        reduce using rule 23 (brazos -> brazos brazo .)
    GUIONB          reduce using rule 23 (brazos -> brazos brazo .)
    ENTERO          reduce using rule 23 (brazos -> brazos brazo .)
    DECIMAL         reduce using rule 23 (brazos -> brazos brazo .)
    TRUE            reduce using rule 23 (brazos -> brazos brazo .)
    FALSE           reduce using rule 23 (brazos -> brazos brazo .)
    CADENA          reduce using rule 23 (brazos -> brazos brazo .)
    CARACTER        reduce using rule 23 (brazos -> brazos brazo .)
    MENOS           reduce using rule 23 (brazos -> brazos brazo .)
    NOT             reduce using rule 23 (brazos -> brazos brazo .)
    I64             reduce using rule 23 (brazos -> brazos brazo .)
    F64             reduce using rule 23 (brazos -> brazos brazo .)
    PARIZQ          reduce using rule 23 (brazos -> brazos brazo .)
    CORIZQ          reduce using rule 23 (brazos -> brazos brazo .)


state 128

    (25) brazo -> coincidencias IGUAL . MAYORQUE LLAVEIZQ instrucciones LLAVEDER
    (26) brazo -> coincidencias IGUAL . MAYORQUE instr_match COMA

    MAYORQUE        shift and go to state 143


state 129

    (27) coincidencias -> coincidencias BARRAS . coincidencia
    (29) coincidencia -> . expresion
    (30) coincidencia -> . GUIONB
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    GUIONB          shift and go to state 106
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    coincidencia                   shift and go to state 144
    expresion                      shift and go to state 101
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 130

    (2) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]
  ! LOOP            [ reduce using rule 5 (instrucciones -> .) ]
  ! MATCH           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 145
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 131

    (15) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LOOP            reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    MATCH           reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    COMA            reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 132

    (16) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (17) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (18) lelseif -> lelseif . elseif
    (21) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (20) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LOOP            reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    MATCH           reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    COMA            reduce using rule 16 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 133

    else                           shift and go to state 146
    elseif                         shift and go to state 147

state 133

    (21) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (20) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 148
    IF              shift and go to state 149


state 134

    (19) lelseif -> elseif .

    ELSE            reduce using rule 19 (lelseif -> elseif .)
    FN              reduce using rule 19 (lelseif -> elseif .)
    PRINTLN         reduce using rule 19 (lelseif -> elseif .)
    IF              reduce using rule 19 (lelseif -> elseif .)
    WHILE           reduce using rule 19 (lelseif -> elseif .)
    CONTINUE        reduce using rule 19 (lelseif -> elseif .)
    BREAK           reduce using rule 19 (lelseif -> elseif .)
    LOOP            reduce using rule 19 (lelseif -> elseif .)
    MATCH           reduce using rule 19 (lelseif -> elseif .)
    $end            reduce using rule 19 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 19 (lelseif -> elseif .)
    COMA            reduce using rule 19 (lelseif -> elseif .)


state 135

    (57) tostring -> expresion PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    AS              reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    IGUAL           reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    BARRAS          reduce using rule 57 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)


state 136

    (58) toowned -> expresion PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    AS              reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    CORDER          reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    IGUAL           reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    BARRAS          reduce using rule 58 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)


state 137

    (82) nativas_fun -> expresion PTO ABS PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAS             reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENOS           reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    POR             reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MODULO          reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    IGUALQUE        reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORQUE        reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORQUE        reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORIQUE       reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    OR              reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AND             reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PTO             reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PARDER          reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AS              reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    CORDER          reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    COMA            reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    IGUAL           reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    BARRAS          reduce using rule 82 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)


state 138

    (83) nativas_fun -> expresion PTO SQRT PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAS             reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENOS           reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    POR             reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MODULO          reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    IGUALQUE        reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORQUE        reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORQUE        reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORIQUE       reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    OR              reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AND             reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PTO             reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PARDER          reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AS              reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    CORDER          reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    COMA            reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    IGUAL           reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    BARRAS          reduce using rule 83 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)


state 139

    (84) nativas_fun -> expresion PTO CLONE PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAS             reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENOS           reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    POR             reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MODULO          reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    IGUALQUE        reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORQUE        reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORQUE        reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORIQUE       reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    OR              reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AND             reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PTO             reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PARDER          reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AS              reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    CORDER          reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    COMA            reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    IGUAL           reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    BARRAS          reduce using rule 84 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)


state 140

    (68) expresion -> I64 DDOSPT POW PARIZQ expresion . COMA expresion PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 150
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 141

    (80) expresion -> PARIZQ expresion AS tipo PARDER .

    LLAVEIZQ        reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAS             reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENOS           reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    POR             reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    DIVIDIDO        reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MODULO          reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    IGUALQUE        reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    NOIGUALQUE      reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORQUE        reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORQUE        reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORIQUE       reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORIQUE       reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    OR              reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AND             reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PTO             reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PARDER          reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AS              reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    CORDER          reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    COMA            reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    IGUAL           reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)
    BARRAS          reduce using rule 80 (expresion -> PARIZQ expresion AS tipo PARDER .)


state 142

    (69) expresion -> F64 DDOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 151
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 143

    (25) brazo -> coincidencias IGUAL MAYORQUE . LLAVEIZQ instrucciones LLAVEDER
    (26) brazo -> coincidencias IGUAL MAYORQUE . instr_match COMA
    (31) instr_match -> . imprimir
    (32) instr_match -> . if
    (33) instr_match -> . while
    (34) instr_match -> . break
    (35) instr_match -> . continue
    (36) instr_match -> . loop
    (37) instr_match -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (40) break -> . BREAK
    (41) continue -> . CONTINUE
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    LLAVEIZQ        shift and go to state 152
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    BREAK           shift and go to state 15
    CONTINUE        shift and go to state 14
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    instr_match                    shift and go to state 153
    imprimir                       shift and go to state 154
    if                             shift and go to state 155
    while                          shift and go to state 156
    break                          shift and go to state 157
    continue                       shift and go to state 158
    loop                           shift and go to state 159
    match                          shift and go to state 160

state 144

    (27) coincidencias -> coincidencias BARRAS coincidencia .

    IGUAL           reduce using rule 27 (coincidencias -> coincidencias BARRAS coincidencia .)
    BARRAS          reduce using rule 27 (coincidencias -> coincidencias BARRAS coincidencia .)


state 145

    (2) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    LLAVEDER        shift and go to state 161
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 146

    (17) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LOOP            reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    MATCH           reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    COMA            reduce using rule 17 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 147

    (18) lelseif -> lelseif elseif .

    ELSE            reduce using rule 18 (lelseif -> lelseif elseif .)
    FN              reduce using rule 18 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 18 (lelseif -> lelseif elseif .)
    IF              reduce using rule 18 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 18 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 18 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 18 (lelseif -> lelseif elseif .)
    LOOP            reduce using rule 18 (lelseif -> lelseif elseif .)
    MATCH           reduce using rule 18 (lelseif -> lelseif elseif .)
    $end            reduce using rule 18 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 18 (lelseif -> lelseif elseif .)
    COMA            reduce using rule 18 (lelseif -> lelseif elseif .)


state 148

    (21) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]
  ! LOOP            [ reduce using rule 5 (instrucciones -> .) ]
  ! MATCH           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 162
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 149

    (20) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 163
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 150

    (68) expresion -> I64 DDOSPT POW PARIZQ expresion COMA . expresion PARDER
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 164
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 151

    (69) expresion -> F64 DDOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (51) expresion -> . ENTERO
    (52) expresion -> . DECIMAL
    (53) expresion -> . TRUE
    (54) expresion -> . FALSE
    (55) expresion -> . tostring
    (56) expresion -> . toowned
    (59) expresion -> . CADENA
    (60) expresion -> . CARACTER
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion POR expresion
    (64) expresion -> . expresion DIVIDIDO expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . MENOS expresion
    (67) expresion -> . NOT expresion
    (68) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (69) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (70) expresion -> . expresion IGUALQUE expresion
    (71) expresion -> . expresion NOIGUALQUE expresion
    (72) expresion -> . expresion MENORQUE expresion
    (73) expresion -> . expresion MAYORQUE expresion
    (74) expresion -> . expresion MENORIQUE expresion
    (75) expresion -> . expresion MAYORIQUE expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . PARIZQ expresion PARDER
    (79) expresion -> . CORIZQ expresiones CORDER
    (80) expresion -> . PARIZQ expresion AS tipo PARDER
    (81) expresion -> . nativas_fun
    (57) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (58) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (83) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 32
    CARACTER        shift and go to state 33
    MENOS           shift and go to state 34
    NOT             shift and go to state 35
    I64             shift and go to state 36
    F64             shift and go to state 38
    PARIZQ          shift and go to state 37
    CORIZQ          shift and go to state 39

    expresion                      shift and go to state 165
    tostring                       shift and go to state 30
    toowned                        shift and go to state 31
    nativas_fun                    shift and go to state 40

state 152

    (25) brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]
  ! LOOP            [ reduce using rule 5 (instrucciones -> .) ]
  ! MATCH           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 166
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 153

    (26) brazo -> coincidencias IGUAL MAYORQUE instr_match . COMA

    COMA            shift and go to state 167


state 154

    (31) instr_match -> imprimir .

    COMA            reduce using rule 31 (instr_match -> imprimir .)


state 155

    (32) instr_match -> if .

    COMA            reduce using rule 32 (instr_match -> if .)


state 156

    (33) instr_match -> while .

    COMA            reduce using rule 33 (instr_match -> while .)


state 157

    (34) instr_match -> break .

    COMA            reduce using rule 34 (instr_match -> break .)


state 158

    (35) instr_match -> continue .

    COMA            reduce using rule 35 (instr_match -> continue .)


state 159

    (36) instr_match -> loop .

    COMA            reduce using rule 36 (instr_match -> loop .)


state 160

    (37) instr_match -> match .

    COMA            reduce using rule 37 (instr_match -> match .)


state 161

    (2) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    PRINTLN         reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 162

    (21) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    LLAVEDER        shift and go to state 168
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 163

    (20) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 169
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 164

    (68) expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion . PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 170
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 165

    (69) expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . POR expresion
    (64) expresion -> expresion . DIVIDIDO expresion
    (65) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALQUE expresion
    (71) expresion -> expresion . NOIGUALQUE expresion
    (72) expresion -> expresion . MENORQUE expresion
    (73) expresion -> expresion . MAYORQUE expresion
    (74) expresion -> expresion . MENORIQUE expresion
    (75) expresion -> expresion . MAYORIQUE expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (57) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (58) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (82) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (83) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (84) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 171
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NOIGUALQUE      shift and go to state 54
    MENORQUE        shift and go to state 55
    MAYORQUE        shift and go to state 56
    MENORIQUE       shift and go to state 57
    MAYORIQUE       shift and go to state 58
    OR              shift and go to state 59
    AND             shift and go to state 60
    PTO             shift and go to state 61


state 166

    (25) brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    LLAVEDER        shift and go to state 172
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 167

    (26) brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .

    LLAVEDER        reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    GUIONB          reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    ENTERO          reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    DECIMAL         reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    TRUE            reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    FALSE           reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    CADENA          reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    CARACTER        reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    MENOS           reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    NOT             reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    I64             reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    F64             reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    PARIZQ          reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)
    CORIZQ          reduce using rule 26 (brazo -> coincidencias IGUAL MAYORQUE instr_match COMA .)


state 168

    (21) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 21 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 169

    (20) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]
  ! LOOP            [ reduce using rule 5 (instrucciones -> .) ]
  ! MATCH           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 173
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 170

    (68) expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 68 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 171

    (69) expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUAL           reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    BARRAS          reduce using rule 69 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 172

    (25) brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .

    LLAVEDER        reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    GUIONB          reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    PARIZQ          reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 25 (brazo -> coincidencias IGUAL MAYORQUE LLAVEIZQ instrucciones LLAVEDER .)


state 173

    (20) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir PTCOMA
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue PTCOMA
    (10) instruccion -> . break PTCOMA
    (11) instruccion -> . loop
    (12) instruccion -> . match
    (13) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (16) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (17) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (39) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (41) continue -> . CONTINUE
    (40) break -> . BREAK
    (38) loop -> . LOOP LLAVEIZQ instrucciones LLAVEDER
    (22) match -> . MATCH expresion LLAVEIZQ brazos LLAVEDER

    LLAVEDER        shift and go to state 174
    PRINTLN         shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    CONTINUE        shift and go to state 14
    BREAK           shift and go to state 15
    LOOP            shift and go to state 16
    MATCH           shift and go to state 17

    instruccion                    shift and go to state 19
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8
    loop                           shift and go to state 9
    match                          shift and go to state 10

state 174

    (20) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    MATCH           reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 20 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 0 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 0 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 0 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 18 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 18 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 18 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 42 resolved as shift
WARNING: shift/reduce conflict for IF in state 42 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 42 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 42 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 42 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 42 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 42 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 47 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 47 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 47 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 47 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 47 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 69 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 69 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 69 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 69 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 69 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 130 resolved as shift
WARNING: shift/reduce conflict for IF in state 130 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 130 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 130 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 130 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 130 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 130 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 148 resolved as shift
WARNING: shift/reduce conflict for IF in state 148 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 148 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 148 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 148 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 148 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 148 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 152 resolved as shift
WARNING: shift/reduce conflict for IF in state 152 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 152 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 152 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 152 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 152 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 152 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 169 resolved as shift
WARNING: shift/reduce conflict for IF in state 169 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 169 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 169 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 169 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 169 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 169 resolved as shift
