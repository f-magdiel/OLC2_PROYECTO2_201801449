Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BARRAS
    CAPACITY
    CONTAINS
    CORDER
    CORIZQ
    DOSPT
    FOR
    GUIONB
    ID
    IGUAL
    IN
    INSERT
    LEN
    LET
    LOOP
    MATCH
    MUT
    NEW
    PUSH
    REMOVE
    RETURN
    SIGNOI
    STR
    VEC
    VVEC
    WITH_CAPACITY

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones main instrucciones
Rule 2     main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 3     instrucciones -> instrucciones instruccion
Rule 4     instrucciones -> instruccion
Rule 5     instrucciones -> <empty>
Rule 6     instruccion -> imprimir
Rule 7     instruccion -> if
Rule 8     instruccion -> while
Rule 9     instruccion -> continue
Rule 10    instruccion -> break
Rule 11    imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
Rule 12    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 13    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else
Rule 14    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
Rule 15    if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
Rule 16    lelseif -> lelseif elseif
Rule 17    lelseif -> elseif
Rule 18    elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER
Rule 19    else -> ELSE LLAVEIZQ instrucciones LLAVEDER
Rule 20    while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER
Rule 21    break -> BREAK PTCOMA
Rule 22    continue -> CONTINUE PTCOMA
Rule 23    tipo -> I64
Rule 24    tipo -> F64
Rule 25    tipo -> BOOL
Rule 26    tipo -> CHAR
Rule 27    tipo -> STRING
Rule 28    tipo -> USIZE
Rule 29    expresiones -> expresiones COMA expresion
Rule 30    expresiones -> expresion
Rule 31    expresion -> ENTERO
Rule 32    expresion -> DECIMAL
Rule 33    expresion -> TRUE
Rule 34    expresion -> FALSE
Rule 35    expresion -> tostring
Rule 36    expresion -> toowned
Rule 37    tostring -> expresion PTO TOSTRING PARIZQ PARDER
Rule 38    toowned -> expresion PTO TOOWNED PARIZQ PARDER
Rule 39    expresion -> CADENA
Rule 40    expresion -> CARACTER
Rule 41    expresion -> expresion MAS expresion
Rule 42    expresion -> expresion MENOS expresion
Rule 43    expresion -> expresion POR expresion
Rule 44    expresion -> expresion DIVIDIDO expresion
Rule 45    expresion -> expresion MODULO expresion
Rule 46    expresion -> MENOS expresion
Rule 47    expresion -> NOT expresion
Rule 48    expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
Rule 49    expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
Rule 50    expresion -> expresion IGUALQUE expresion
Rule 51    expresion -> expresion NOIGUALQUE expresion
Rule 52    expresion -> expresion MENORQUE expresion
Rule 53    expresion -> expresion MAYORQUE expresion
Rule 54    expresion -> expresion MENORIQUE expresion
Rule 55    expresion -> expresion MAYORIQUE expresion
Rule 56    expresion -> expresion OR expresion
Rule 57    expresion -> expresion AND expresion
Rule 58    expresion -> PARIZQ expresion PARDER
Rule 59    expresion -> PARIZQ expresion AS tipo PARDER
Rule 60    expresion -> nativas_fun
Rule 61    nativas_fun -> expresion PTO ABS PARIZQ PARDER
Rule 62    nativas_fun -> expresion PTO SQRT PARIZQ PARDER
Rule 63    nativas_fun -> expresion PTO CLONE PARIZQ PARDER

Terminals, with rules where they appear

ABS                  : 61
AND                  : 57
AS                   : 59
BARRAS               : 
BOOL                 : 25
BREAK                : 21
CADENA               : 39
CAPACITY             : 
CARACTER             : 40
CHAR                 : 26
CLONE                : 63
COMA                 : 29 48 49
CONTAINS             : 
CONTINUE             : 22
CORDER               : 
CORIZQ               : 
DDOSPT               : 48 49
DECIMAL              : 32
DIVIDIDO             : 44
DOSPT                : 
ELSE                 : 18 19
ENTERO               : 31
F64                  : 24 49
FALSE                : 34
FN                   : 2
FOR                  : 
GUIONB               : 
I64                  : 23 48
ID                   : 
IF                   : 12 13 14 15 18
IGUAL                : 
IGUALQUE             : 50
IN                   : 
INSERT               : 
LEN                  : 
LET                  : 
LLAVEDER             : 2 12 13 14 15 18 19 20
LLAVEIZQ             : 2 12 13 14 15 18 19 20
LOOP                 : 
MAIN                 : 2
MAS                  : 41
MATCH                : 
MAYORIQUE            : 55
MAYORQUE             : 53
MENORIQUE            : 54
MENORQUE             : 52
MENOS                : 42 46
MODULO               : 45
MUT                  : 
NEW                  : 
NOIGUALQUE           : 51
NOT                  : 11 47
OR                   : 56
PARDER               : 2 11 37 38 48 49 58 59 61 62 63
PARIZQ               : 2 11 37 38 48 49 58 59 61 62 63
POR                  : 43
POW                  : 48
POWF                 : 49
PRINTLN              : 11
PTCOMA               : 11 21 22
PTO                  : 37 38 61 62 63
PUSH                 : 
REMOVE               : 
RETURN               : 
SIGNOI               : 
SQRT                 : 62
STR                  : 
STRING               : 27
TOOWNED              : 38
TOSTRING             : 37
TRUE                 : 33
USIZE                : 28
VEC                  : 
VVEC                 : 
WHILE                : 20
WITH_CAPACITY        : 
error                : 

Nonterminals, with rules where they appear

break                : 10
continue             : 9
else                 : 13 15
elseif               : 16 17
expresion            : 12 13 14 15 18 20 29 30 37 38 41 41 42 42 43 43 44 44 45 45 46 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 59 61 62 63
expresiones          : 11 29
if                   : 7
imprimir             : 6
inicio               : 0
instruccion          : 3 4
instrucciones        : 1 1 2 3 12 13 14 15 18 19 20
lelseif              : 14 15 16
main                 : 1
nativas_fun          : 60
tipo                 : 59
toowned              : 36
tostring             : 35
while                : 8

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones main instrucciones
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    FN              reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones . main instrucciones
    (3) instrucciones -> instrucciones . instruccion
    (2) main -> . FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

    FN              shift and go to state 16
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

    main                           shift and go to state 14
    instruccion                    shift and go to state 15
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 3

    (4) instrucciones -> instruccion .

    FN              reduce using rule 4 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 4 (instrucciones -> instruccion .)
    IF              reduce using rule 4 (instrucciones -> instruccion .)
    WHILE           reduce using rule 4 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 4 (instrucciones -> instruccion .)
    BREAK           reduce using rule 4 (instrucciones -> instruccion .)
    $end            reduce using rule 4 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 4 (instrucciones -> instruccion .)


state 4

    (6) instruccion -> imprimir .

    FN              reduce using rule 6 (instruccion -> imprimir .)
    PRINTLN         reduce using rule 6 (instruccion -> imprimir .)
    IF              reduce using rule 6 (instruccion -> imprimir .)
    WHILE           reduce using rule 6 (instruccion -> imprimir .)
    CONTINUE        reduce using rule 6 (instruccion -> imprimir .)
    BREAK           reduce using rule 6 (instruccion -> imprimir .)
    $end            reduce using rule 6 (instruccion -> imprimir .)
    LLAVEDER        reduce using rule 6 (instruccion -> imprimir .)


state 5

    (7) instruccion -> if .

    FN              reduce using rule 7 (instruccion -> if .)
    PRINTLN         reduce using rule 7 (instruccion -> if .)
    IF              reduce using rule 7 (instruccion -> if .)
    WHILE           reduce using rule 7 (instruccion -> if .)
    CONTINUE        reduce using rule 7 (instruccion -> if .)
    BREAK           reduce using rule 7 (instruccion -> if .)
    $end            reduce using rule 7 (instruccion -> if .)
    LLAVEDER        reduce using rule 7 (instruccion -> if .)


state 6

    (8) instruccion -> while .

    FN              reduce using rule 8 (instruccion -> while .)
    PRINTLN         reduce using rule 8 (instruccion -> while .)
    IF              reduce using rule 8 (instruccion -> while .)
    WHILE           reduce using rule 8 (instruccion -> while .)
    CONTINUE        reduce using rule 8 (instruccion -> while .)
    BREAK           reduce using rule 8 (instruccion -> while .)
    $end            reduce using rule 8 (instruccion -> while .)
    LLAVEDER        reduce using rule 8 (instruccion -> while .)


state 7

    (9) instruccion -> continue .

    FN              reduce using rule 9 (instruccion -> continue .)
    PRINTLN         reduce using rule 9 (instruccion -> continue .)
    IF              reduce using rule 9 (instruccion -> continue .)
    WHILE           reduce using rule 9 (instruccion -> continue .)
    CONTINUE        reduce using rule 9 (instruccion -> continue .)
    BREAK           reduce using rule 9 (instruccion -> continue .)
    $end            reduce using rule 9 (instruccion -> continue .)
    LLAVEDER        reduce using rule 9 (instruccion -> continue .)


state 8

    (10) instruccion -> break .

    FN              reduce using rule 10 (instruccion -> break .)
    PRINTLN         reduce using rule 10 (instruccion -> break .)
    IF              reduce using rule 10 (instruccion -> break .)
    WHILE           reduce using rule 10 (instruccion -> break .)
    CONTINUE        reduce using rule 10 (instruccion -> break .)
    BREAK           reduce using rule 10 (instruccion -> break .)
    $end            reduce using rule 10 (instruccion -> break .)
    LLAVEDER        reduce using rule 10 (instruccion -> break .)


state 9

    (11) imprimir -> PRINTLN . NOT PARIZQ expresiones PARDER PTCOMA

    NOT             shift and go to state 17


state 10

    (12) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> IF . expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 18
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 11

    (20) while -> WHILE . expresion LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 33
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 12

    (22) continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 34


state 13

    (21) break -> BREAK . PTCOMA

    PTCOMA          shift and go to state 35


state 14

    (1) inicio -> instrucciones main . instrucciones
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    $end            reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 36
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 15

    (3) instrucciones -> instrucciones instruccion .

    FN              reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 3 (instrucciones -> instrucciones instruccion .)


state 16

    (2) main -> FN . MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    MAIN            shift and go to state 37


state 17

    (11) imprimir -> PRINTLN NOT . PARIZQ expresiones PARDER PTCOMA

    PARIZQ          shift and go to state 38


state 18

    (12) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (13) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> IF expresion . LLAVEIZQ instrucciones LLAVEDER lelseif else
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 39
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 19

    (31) expresion -> ENTERO .

    LLAVEIZQ        reduce using rule 31 (expresion -> ENTERO .)
    MAS             reduce using rule 31 (expresion -> ENTERO .)
    MENOS           reduce using rule 31 (expresion -> ENTERO .)
    POR             reduce using rule 31 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 31 (expresion -> ENTERO .)
    MODULO          reduce using rule 31 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 31 (expresion -> ENTERO .)
    NOIGUALQUE      reduce using rule 31 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 31 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 31 (expresion -> ENTERO .)
    MENORIQUE       reduce using rule 31 (expresion -> ENTERO .)
    MAYORIQUE       reduce using rule 31 (expresion -> ENTERO .)
    OR              reduce using rule 31 (expresion -> ENTERO .)
    AND             reduce using rule 31 (expresion -> ENTERO .)
    PTO             reduce using rule 31 (expresion -> ENTERO .)
    PARDER          reduce using rule 31 (expresion -> ENTERO .)
    AS              reduce using rule 31 (expresion -> ENTERO .)
    COMA            reduce using rule 31 (expresion -> ENTERO .)


state 20

    (32) expresion -> DECIMAL .

    LLAVEIZQ        reduce using rule 32 (expresion -> DECIMAL .)
    MAS             reduce using rule 32 (expresion -> DECIMAL .)
    MENOS           reduce using rule 32 (expresion -> DECIMAL .)
    POR             reduce using rule 32 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 32 (expresion -> DECIMAL .)
    MODULO          reduce using rule 32 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 32 (expresion -> DECIMAL .)
    NOIGUALQUE      reduce using rule 32 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 32 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 32 (expresion -> DECIMAL .)
    MENORIQUE       reduce using rule 32 (expresion -> DECIMAL .)
    MAYORIQUE       reduce using rule 32 (expresion -> DECIMAL .)
    OR              reduce using rule 32 (expresion -> DECIMAL .)
    AND             reduce using rule 32 (expresion -> DECIMAL .)
    PTO             reduce using rule 32 (expresion -> DECIMAL .)
    PARDER          reduce using rule 32 (expresion -> DECIMAL .)
    AS              reduce using rule 32 (expresion -> DECIMAL .)
    COMA            reduce using rule 32 (expresion -> DECIMAL .)


state 21

    (33) expresion -> TRUE .

    LLAVEIZQ        reduce using rule 33 (expresion -> TRUE .)
    MAS             reduce using rule 33 (expresion -> TRUE .)
    MENOS           reduce using rule 33 (expresion -> TRUE .)
    POR             reduce using rule 33 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 33 (expresion -> TRUE .)
    MODULO          reduce using rule 33 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 33 (expresion -> TRUE .)
    NOIGUALQUE      reduce using rule 33 (expresion -> TRUE .)
    MENORQUE        reduce using rule 33 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 33 (expresion -> TRUE .)
    MENORIQUE       reduce using rule 33 (expresion -> TRUE .)
    MAYORIQUE       reduce using rule 33 (expresion -> TRUE .)
    OR              reduce using rule 33 (expresion -> TRUE .)
    AND             reduce using rule 33 (expresion -> TRUE .)
    PTO             reduce using rule 33 (expresion -> TRUE .)
    PARDER          reduce using rule 33 (expresion -> TRUE .)
    AS              reduce using rule 33 (expresion -> TRUE .)
    COMA            reduce using rule 33 (expresion -> TRUE .)


state 22

    (34) expresion -> FALSE .

    LLAVEIZQ        reduce using rule 34 (expresion -> FALSE .)
    MAS             reduce using rule 34 (expresion -> FALSE .)
    MENOS           reduce using rule 34 (expresion -> FALSE .)
    POR             reduce using rule 34 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 34 (expresion -> FALSE .)
    MODULO          reduce using rule 34 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 34 (expresion -> FALSE .)
    NOIGUALQUE      reduce using rule 34 (expresion -> FALSE .)
    MENORQUE        reduce using rule 34 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 34 (expresion -> FALSE .)
    MENORIQUE       reduce using rule 34 (expresion -> FALSE .)
    MAYORIQUE       reduce using rule 34 (expresion -> FALSE .)
    OR              reduce using rule 34 (expresion -> FALSE .)
    AND             reduce using rule 34 (expresion -> FALSE .)
    PTO             reduce using rule 34 (expresion -> FALSE .)
    PARDER          reduce using rule 34 (expresion -> FALSE .)
    AS              reduce using rule 34 (expresion -> FALSE .)
    COMA            reduce using rule 34 (expresion -> FALSE .)


state 23

    (35) expresion -> tostring .

    LLAVEIZQ        reduce using rule 35 (expresion -> tostring .)
    MAS             reduce using rule 35 (expresion -> tostring .)
    MENOS           reduce using rule 35 (expresion -> tostring .)
    POR             reduce using rule 35 (expresion -> tostring .)
    DIVIDIDO        reduce using rule 35 (expresion -> tostring .)
    MODULO          reduce using rule 35 (expresion -> tostring .)
    IGUALQUE        reduce using rule 35 (expresion -> tostring .)
    NOIGUALQUE      reduce using rule 35 (expresion -> tostring .)
    MENORQUE        reduce using rule 35 (expresion -> tostring .)
    MAYORQUE        reduce using rule 35 (expresion -> tostring .)
    MENORIQUE       reduce using rule 35 (expresion -> tostring .)
    MAYORIQUE       reduce using rule 35 (expresion -> tostring .)
    OR              reduce using rule 35 (expresion -> tostring .)
    AND             reduce using rule 35 (expresion -> tostring .)
    PTO             reduce using rule 35 (expresion -> tostring .)
    PARDER          reduce using rule 35 (expresion -> tostring .)
    AS              reduce using rule 35 (expresion -> tostring .)
    COMA            reduce using rule 35 (expresion -> tostring .)


state 24

    (36) expresion -> toowned .

    LLAVEIZQ        reduce using rule 36 (expresion -> toowned .)
    MAS             reduce using rule 36 (expresion -> toowned .)
    MENOS           reduce using rule 36 (expresion -> toowned .)
    POR             reduce using rule 36 (expresion -> toowned .)
    DIVIDIDO        reduce using rule 36 (expresion -> toowned .)
    MODULO          reduce using rule 36 (expresion -> toowned .)
    IGUALQUE        reduce using rule 36 (expresion -> toowned .)
    NOIGUALQUE      reduce using rule 36 (expresion -> toowned .)
    MENORQUE        reduce using rule 36 (expresion -> toowned .)
    MAYORQUE        reduce using rule 36 (expresion -> toowned .)
    MENORIQUE       reduce using rule 36 (expresion -> toowned .)
    MAYORIQUE       reduce using rule 36 (expresion -> toowned .)
    OR              reduce using rule 36 (expresion -> toowned .)
    AND             reduce using rule 36 (expresion -> toowned .)
    PTO             reduce using rule 36 (expresion -> toowned .)
    PARDER          reduce using rule 36 (expresion -> toowned .)
    AS              reduce using rule 36 (expresion -> toowned .)
    COMA            reduce using rule 36 (expresion -> toowned .)


state 25

    (39) expresion -> CADENA .

    LLAVEIZQ        reduce using rule 39 (expresion -> CADENA .)
    MAS             reduce using rule 39 (expresion -> CADENA .)
    MENOS           reduce using rule 39 (expresion -> CADENA .)
    POR             reduce using rule 39 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 39 (expresion -> CADENA .)
    MODULO          reduce using rule 39 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 39 (expresion -> CADENA .)
    NOIGUALQUE      reduce using rule 39 (expresion -> CADENA .)
    MENORQUE        reduce using rule 39 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 39 (expresion -> CADENA .)
    MENORIQUE       reduce using rule 39 (expresion -> CADENA .)
    MAYORIQUE       reduce using rule 39 (expresion -> CADENA .)
    OR              reduce using rule 39 (expresion -> CADENA .)
    AND             reduce using rule 39 (expresion -> CADENA .)
    PTO             reduce using rule 39 (expresion -> CADENA .)
    PARDER          reduce using rule 39 (expresion -> CADENA .)
    AS              reduce using rule 39 (expresion -> CADENA .)
    COMA            reduce using rule 39 (expresion -> CADENA .)


state 26

    (40) expresion -> CARACTER .

    LLAVEIZQ        reduce using rule 40 (expresion -> CARACTER .)
    MAS             reduce using rule 40 (expresion -> CARACTER .)
    MENOS           reduce using rule 40 (expresion -> CARACTER .)
    POR             reduce using rule 40 (expresion -> CARACTER .)
    DIVIDIDO        reduce using rule 40 (expresion -> CARACTER .)
    MODULO          reduce using rule 40 (expresion -> CARACTER .)
    IGUALQUE        reduce using rule 40 (expresion -> CARACTER .)
    NOIGUALQUE      reduce using rule 40 (expresion -> CARACTER .)
    MENORQUE        reduce using rule 40 (expresion -> CARACTER .)
    MAYORQUE        reduce using rule 40 (expresion -> CARACTER .)
    MENORIQUE       reduce using rule 40 (expresion -> CARACTER .)
    MAYORIQUE       reduce using rule 40 (expresion -> CARACTER .)
    OR              reduce using rule 40 (expresion -> CARACTER .)
    AND             reduce using rule 40 (expresion -> CARACTER .)
    PTO             reduce using rule 40 (expresion -> CARACTER .)
    PARDER          reduce using rule 40 (expresion -> CARACTER .)
    AS              reduce using rule 40 (expresion -> CARACTER .)
    COMA            reduce using rule 40 (expresion -> CARACTER .)


state 27

    (46) expresion -> MENOS . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 54
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 28

    (47) expresion -> NOT . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 55
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 29

    (48) expresion -> I64 . DDOSPT POW PARIZQ expresion COMA expresion PARDER

    DDOSPT          shift and go to state 56


state 30

    (58) expresion -> PARIZQ . expresion PARDER
    (59) expresion -> PARIZQ . expresion AS tipo PARDER
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 57
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 31

    (49) expresion -> F64 . DDOSPT POWF PARIZQ expresion COMA expresion PARDER

    DDOSPT          shift and go to state 58


state 32

    (60) expresion -> nativas_fun .

    LLAVEIZQ        reduce using rule 60 (expresion -> nativas_fun .)
    MAS             reduce using rule 60 (expresion -> nativas_fun .)
    MENOS           reduce using rule 60 (expresion -> nativas_fun .)
    POR             reduce using rule 60 (expresion -> nativas_fun .)
    DIVIDIDO        reduce using rule 60 (expresion -> nativas_fun .)
    MODULO          reduce using rule 60 (expresion -> nativas_fun .)
    IGUALQUE        reduce using rule 60 (expresion -> nativas_fun .)
    NOIGUALQUE      reduce using rule 60 (expresion -> nativas_fun .)
    MENORQUE        reduce using rule 60 (expresion -> nativas_fun .)
    MAYORQUE        reduce using rule 60 (expresion -> nativas_fun .)
    MENORIQUE       reduce using rule 60 (expresion -> nativas_fun .)
    MAYORIQUE       reduce using rule 60 (expresion -> nativas_fun .)
    OR              reduce using rule 60 (expresion -> nativas_fun .)
    AND             reduce using rule 60 (expresion -> nativas_fun .)
    PTO             reduce using rule 60 (expresion -> nativas_fun .)
    PARDER          reduce using rule 60 (expresion -> nativas_fun .)
    AS              reduce using rule 60 (expresion -> nativas_fun .)
    COMA            reduce using rule 60 (expresion -> nativas_fun .)


state 33

    (20) while -> WHILE expresion . LLAVEIZQ instrucciones LLAVEDER
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 59
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 34

    (22) continue -> CONTINUE PTCOMA .

    FN              reduce using rule 22 (continue -> CONTINUE PTCOMA .)
    PRINTLN         reduce using rule 22 (continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 22 (continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 22 (continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 22 (continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 22 (continue -> CONTINUE PTCOMA .)
    $end            reduce using rule 22 (continue -> CONTINUE PTCOMA .)
    LLAVEDER        reduce using rule 22 (continue -> CONTINUE PTCOMA .)


state 35

    (21) break -> BREAK PTCOMA .

    FN              reduce using rule 21 (break -> BREAK PTCOMA .)
    PRINTLN         reduce using rule 21 (break -> BREAK PTCOMA .)
    IF              reduce using rule 21 (break -> BREAK PTCOMA .)
    WHILE           reduce using rule 21 (break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 21 (break -> BREAK PTCOMA .)
    BREAK           reduce using rule 21 (break -> BREAK PTCOMA .)
    $end            reduce using rule 21 (break -> BREAK PTCOMA .)
    LLAVEDER        reduce using rule 21 (break -> BREAK PTCOMA .)


state 36

    (1) inicio -> instrucciones main instrucciones .
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

    $end            reduce using rule 1 (inicio -> instrucciones main instrucciones .)
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

    instruccion                    shift and go to state 15
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 37

    (2) main -> FN MAIN . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 60


state 38

    (11) imprimir -> PRINTLN NOT PARIZQ . expresiones PARDER PTCOMA
    (29) expresiones -> . expresiones COMA expresion
    (30) expresiones -> . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresiones                    shift and go to state 61
    expresion                      shift and go to state 62
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 39

    (12) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (13) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER else
    (14) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif
    (15) if -> IF expresion LLAVEIZQ . instrucciones LLAVEDER lelseif else
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 63
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 40

    (41) expresion -> expresion MAS . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 64
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 41

    (42) expresion -> expresion MENOS . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 65
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 42

    (43) expresion -> expresion POR . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 66
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 43

    (44) expresion -> expresion DIVIDIDO . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 67
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 44

    (45) expresion -> expresion MODULO . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 68
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 45

    (50) expresion -> expresion IGUALQUE . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 69
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 46

    (51) expresion -> expresion NOIGUALQUE . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 70
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 47

    (52) expresion -> expresion MENORQUE . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 71
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 48

    (53) expresion -> expresion MAYORQUE . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 72
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 49

    (54) expresion -> expresion MENORIQUE . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 73
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 50

    (55) expresion -> expresion MAYORIQUE . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 74
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 51

    (56) expresion -> expresion OR . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 75
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 52

    (57) expresion -> expresion AND . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 76
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 53

    (37) tostring -> expresion PTO . TOSTRING PARIZQ PARDER
    (38) toowned -> expresion PTO . TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion PTO . ABS PARIZQ PARDER
    (62) nativas_fun -> expresion PTO . SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion PTO . CLONE PARIZQ PARDER

    TOSTRING        shift and go to state 77
    TOOWNED         shift and go to state 78
    ABS             shift and go to state 79
    SQRT            shift and go to state 80
    CLONE           shift and go to state 81


state 54

    (46) expresion -> MENOS expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 46 (expresion -> MENOS expresion .)
    MAS             reduce using rule 46 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 46 (expresion -> MENOS expresion .)
    POR             reduce using rule 46 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 46 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 46 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 46 (expresion -> MENOS expresion .)
    NOIGUALQUE      reduce using rule 46 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 46 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 46 (expresion -> MENOS expresion .)
    MENORIQUE       reduce using rule 46 (expresion -> MENOS expresion .)
    MAYORIQUE       reduce using rule 46 (expresion -> MENOS expresion .)
    OR              reduce using rule 46 (expresion -> MENOS expresion .)
    AND             reduce using rule 46 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 46 (expresion -> MENOS expresion .)
    AS              reduce using rule 46 (expresion -> MENOS expresion .)
    COMA            reduce using rule 46 (expresion -> MENOS expresion .)
    PTO             shift and go to state 53

  ! PTO             [ reduce using rule 46 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 55

    (47) expresion -> NOT expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 47 (expresion -> NOT expresion .)
    MAS             reduce using rule 47 (expresion -> NOT expresion .)
    MENOS           reduce using rule 47 (expresion -> NOT expresion .)
    POR             reduce using rule 47 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 47 (expresion -> NOT expresion .)
    MODULO          reduce using rule 47 (expresion -> NOT expresion .)
    IGUALQUE        reduce using rule 47 (expresion -> NOT expresion .)
    NOIGUALQUE      reduce using rule 47 (expresion -> NOT expresion .)
    MENORQUE        reduce using rule 47 (expresion -> NOT expresion .)
    MAYORQUE        reduce using rule 47 (expresion -> NOT expresion .)
    MENORIQUE       reduce using rule 47 (expresion -> NOT expresion .)
    MAYORIQUE       reduce using rule 47 (expresion -> NOT expresion .)
    OR              reduce using rule 47 (expresion -> NOT expresion .)
    AND             reduce using rule 47 (expresion -> NOT expresion .)
    PARDER          reduce using rule 47 (expresion -> NOT expresion .)
    AS              reduce using rule 47 (expresion -> NOT expresion .)
    COMA            reduce using rule 47 (expresion -> NOT expresion .)
    PTO             shift and go to state 53

  ! PTO             [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 56

    (48) expresion -> I64 DDOSPT . POW PARIZQ expresion COMA expresion PARDER

    POW             shift and go to state 82


state 57

    (58) expresion -> PARIZQ expresion . PARDER
    (59) expresion -> PARIZQ expresion . AS tipo PARDER
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 83
    AS              shift and go to state 84
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 58

    (49) expresion -> F64 DDOSPT . POWF PARIZQ expresion COMA expresion PARDER

    POWF            shift and go to state 85


state 59

    (20) while -> WHILE expresion LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 86
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 60

    (2) main -> FN MAIN PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 87


state 61

    (11) imprimir -> PRINTLN NOT PARIZQ expresiones . PARDER PTCOMA
    (29) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 88
    COMA            shift and go to state 89


state 62

    (30) expresiones -> expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          reduce using rule 30 (expresiones -> expresion .)
    COMA            reduce using rule 30 (expresiones -> expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 63

    (12) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (13) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER else
    (14) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif
    (15) if -> IF expresion LLAVEIZQ instrucciones . LLAVEDER lelseif else
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

    LLAVEDER        shift and go to state 90
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

    instruccion                    shift and go to state 15
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 64

    (41) expresion -> expresion MAS expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 41 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 41 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 41 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 41 (expresion -> expresion MAS expresion .)
    NOIGUALQUE      reduce using rule 41 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 41 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 41 (expresion -> expresion MAS expresion .)
    MENORIQUE       reduce using rule 41 (expresion -> expresion MAS expresion .)
    MAYORIQUE       reduce using rule 41 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 41 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 41 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 41 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 41 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 41 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    PTO             shift and go to state 53

  ! POR             [ reduce using rule 41 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 41 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> expresion MAS expresion .) ]
  ! PTO             [ reduce using rule 41 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 65

    (42) expresion -> expresion MENOS expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 42 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 42 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 42 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 42 (expresion -> expresion MENOS expresion .)
    NOIGUALQUE      reduce using rule 42 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 42 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 42 (expresion -> expresion MENOS expresion .)
    MENORIQUE       reduce using rule 42 (expresion -> expresion MENOS expresion .)
    MAYORIQUE       reduce using rule 42 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 42 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 42 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 42 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 42 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 42 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    PTO             shift and go to state 53

  ! POR             [ reduce using rule 42 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 42 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> expresion MENOS expresion .) ]
  ! PTO             [ reduce using rule 42 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 66

    (43) expresion -> expresion POR expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 43 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 43 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 43 (expresion -> expresion POR expresion .)
    POR             reduce using rule 43 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 43 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 43 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 43 (expresion -> expresion POR expresion .)
    NOIGUALQUE      reduce using rule 43 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 43 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 43 (expresion -> expresion POR expresion .)
    MENORIQUE       reduce using rule 43 (expresion -> expresion POR expresion .)
    MAYORIQUE       reduce using rule 43 (expresion -> expresion POR expresion .)
    OR              reduce using rule 43 (expresion -> expresion POR expresion .)
    AND             reduce using rule 43 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 43 (expresion -> expresion POR expresion .)
    AS              reduce using rule 43 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 43 (expresion -> expresion POR expresion .)
    PTO             shift and go to state 53

  ! PTO             [ reduce using rule 43 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 67

    (44) expresion -> expresion DIVIDIDO expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    NOIGUALQUE      reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    MENORIQUE       reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIQUE       reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    AS              reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .)
    PTO             shift and go to state 53

  ! PTO             [ reduce using rule 44 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 68

    (45) expresion -> expresion MODULO expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 45 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 45 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 45 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 45 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 45 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 45 (expresion -> expresion MODULO expresion .)
    IGUALQUE        reduce using rule 45 (expresion -> expresion MODULO expresion .)
    NOIGUALQUE      reduce using rule 45 (expresion -> expresion MODULO expresion .)
    MENORQUE        reduce using rule 45 (expresion -> expresion MODULO expresion .)
    MAYORQUE        reduce using rule 45 (expresion -> expresion MODULO expresion .)
    MENORIQUE       reduce using rule 45 (expresion -> expresion MODULO expresion .)
    MAYORIQUE       reduce using rule 45 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 45 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 45 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 45 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 45 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 45 (expresion -> expresion MODULO expresion .)
    PTO             shift and go to state 53

  ! PTO             [ reduce using rule 45 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! POR             [ shift and go to state 42 ]
  ! DIVIDIDO        [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 69

    (50) expresion -> expresion IGUALQUE expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    MENORQUE        reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    MAYORQUE        reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    MENORIQUE       reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    MAYORIQUE       reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    AND             reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    AS              reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 50 (expresion -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    PTO             shift and go to state 53

  ! MAS             [ reduce using rule 50 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 50 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 50 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 50 (expresion -> expresion IGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 50 (expresion -> expresion IGUALQUE expresion .) ]
  ! PTO             [ reduce using rule 50 (expresion -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 70

    (51) expresion -> expresion NOIGUALQUE expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    IGUALQUE        reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    NOIGUALQUE      reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    MENORQUE        reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORQUE        reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    MENORIQUE       reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    MAYORIQUE       reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    OR              reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    AND             reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    PARDER          reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    AS              reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    COMA            reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    PTO             shift and go to state 53

  ! MAS             [ reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! MODULO          [ reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! PTO             [ reduce using rule 51 (expresion -> expresion NOIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 71

    (52) expresion -> expresion MENORQUE expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    IGUALQUE        reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    NOIGUALQUE      reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    MENORIQUE       reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    MAYORIQUE       reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    PARDER          reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    AS              reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 52 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    PTO             shift and go to state 53

  ! MAS             [ reduce using rule 52 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 52 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 52 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 52 (expresion -> expresion MENORQUE expresion .) ]
  ! MODULO          [ reduce using rule 52 (expresion -> expresion MENORQUE expresion .) ]
  ! PTO             [ reduce using rule 52 (expresion -> expresion MENORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 72

    (53) expresion -> expresion MAYORQUE expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    IGUALQUE        reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    NOIGUALQUE      reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    MENORIQUE       reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    MAYORIQUE       reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    PARDER          reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    AS              reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 53 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    PTO             shift and go to state 53

  ! MAS             [ reduce using rule 53 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 53 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 53 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 53 (expresion -> expresion MAYORQUE expresion .) ]
  ! MODULO          [ reduce using rule 53 (expresion -> expresion MAYORQUE expresion .) ]
  ! PTO             [ reduce using rule 53 (expresion -> expresion MAYORQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 73

    (54) expresion -> expresion MENORIQUE expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    IGUALQUE        reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    NOIGUALQUE      reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    MENORQUE        reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    MAYORQUE        reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    MENORIQUE       reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    MAYORIQUE       reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    OR              reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    AND             reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    PARDER          reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    AS              reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    COMA            reduce using rule 54 (expresion -> expresion MENORIQUE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    PTO             shift and go to state 53

  ! MAS             [ reduce using rule 54 (expresion -> expresion MENORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 54 (expresion -> expresion MENORIQUE expresion .) ]
  ! POR             [ reduce using rule 54 (expresion -> expresion MENORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 54 (expresion -> expresion MENORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 54 (expresion -> expresion MENORIQUE expresion .) ]
  ! PTO             [ reduce using rule 54 (expresion -> expresion MENORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 74

    (55) expresion -> expresion MAYORIQUE expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    IGUALQUE        reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    NOIGUALQUE      reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    MENORQUE        reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    MAYORQUE        reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    MENORIQUE       reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    MAYORIQUE       reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    OR              reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    AND             reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    PARDER          reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    AS              reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    COMA            reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    PTO             shift and go to state 53

  ! MAS             [ reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MENOS           [ reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .) ]
  ! POR             [ reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .) ]
  ! MODULO          [ reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .) ]
  ! PTO             [ reduce using rule 55 (expresion -> expresion MAYORIQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 45 ]
  ! NOIGUALQUE      [ shift and go to state 46 ]
  ! MENORQUE        [ shift and go to state 47 ]
  ! MAYORQUE        [ shift and go to state 48 ]
  ! MENORIQUE       [ shift and go to state 49 ]
  ! MAYORIQUE       [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 75

    (56) expresion -> expresion OR expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 56 (expresion -> expresion OR expresion .)
    OR              reduce using rule 56 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 56 (expresion -> expresion OR expresion .)
    AS              reduce using rule 56 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 56 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    AND             shift and go to state 52
    PTO             shift and go to state 53

  ! MAS             [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! MENORIQUE       [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! MAYORIQUE       [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! PTO             [ reduce using rule 56 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 51 ]


state 76

    (57) expresion -> expresion AND expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        reduce using rule 57 (expresion -> expresion AND expresion .)
    OR              reduce using rule 57 (expresion -> expresion AND expresion .)
    AND             reduce using rule 57 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 57 (expresion -> expresion AND expresion .)
    AS              reduce using rule 57 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 57 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    PTO             shift and go to state 53

  ! MAS             [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! NOIGUALQUE      [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! MENORIQUE       [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! MAYORIQUE       [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! PTO             [ reduce using rule 57 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]


state 77

    (37) tostring -> expresion PTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 91


state 78

    (38) toowned -> expresion PTO TOOWNED . PARIZQ PARDER

    PARIZQ          shift and go to state 92


state 79

    (61) nativas_fun -> expresion PTO ABS . PARIZQ PARDER

    PARIZQ          shift and go to state 93


state 80

    (62) nativas_fun -> expresion PTO SQRT . PARIZQ PARDER

    PARIZQ          shift and go to state 94


state 81

    (63) nativas_fun -> expresion PTO CLONE . PARIZQ PARDER

    PARIZQ          shift and go to state 95


state 82

    (48) expresion -> I64 DDOSPT POW . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 96


state 83

    (58) expresion -> PARIZQ expresion PARDER .

    LLAVEIZQ        reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    NOIGUALQUE      reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    MENORIQUE       reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    MAYORIQUE       reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    PTO             reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    AS              reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 58 (expresion -> PARIZQ expresion PARDER .)


state 84

    (59) expresion -> PARIZQ expresion AS . tipo PARDER
    (23) tipo -> . I64
    (24) tipo -> . F64
    (25) tipo -> . BOOL
    (26) tipo -> . CHAR
    (27) tipo -> . STRING
    (28) tipo -> . USIZE

    I64             shift and go to state 98
    F64             shift and go to state 99
    BOOL            shift and go to state 100
    CHAR            shift and go to state 101
    STRING          shift and go to state 102
    USIZE           shift and go to state 103

    tipo                           shift and go to state 97

state 85

    (49) expresion -> F64 DDOSPT POWF . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 104


state 86

    (20) while -> WHILE expresion LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

    LLAVEDER        shift and go to state 105
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

    instruccion                    shift and go to state 15
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 87

    (2) main -> FN MAIN PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 106


state 88

    (11) imprimir -> PRINTLN NOT PARIZQ expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 107


state 89

    (29) expresiones -> expresiones COMA . expresion
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 108
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 90

    (12) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .
    (13) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . else
    (14) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif
    (15) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER . lelseif else
    (19) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (16) lelseif -> . lelseif elseif
    (17) lelseif -> . elseif
    (18) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 12 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            shift and go to state 111

    else                           shift and go to state 109
    lelseif                        shift and go to state 110
    elseif                         shift and go to state 112

state 91

    (37) tostring -> expresion PTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 113


state 92

    (38) toowned -> expresion PTO TOOWNED PARIZQ . PARDER

    PARDER          shift and go to state 114


state 93

    (61) nativas_fun -> expresion PTO ABS PARIZQ . PARDER

    PARDER          shift and go to state 115


state 94

    (62) nativas_fun -> expresion PTO SQRT PARIZQ . PARDER

    PARDER          shift and go to state 116


state 95

    (63) nativas_fun -> expresion PTO CLONE PARIZQ . PARDER

    PARDER          shift and go to state 117


state 96

    (48) expresion -> I64 DDOSPT POW PARIZQ . expresion COMA expresion PARDER
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 118
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 97

    (59) expresion -> PARIZQ expresion AS tipo . PARDER

    PARDER          shift and go to state 119


state 98

    (23) tipo -> I64 .

    PARDER          reduce using rule 23 (tipo -> I64 .)


state 99

    (24) tipo -> F64 .

    PARDER          reduce using rule 24 (tipo -> F64 .)


state 100

    (25) tipo -> BOOL .

    PARDER          reduce using rule 25 (tipo -> BOOL .)


state 101

    (26) tipo -> CHAR .

    PARDER          reduce using rule 26 (tipo -> CHAR .)


state 102

    (27) tipo -> STRING .

    PARDER          reduce using rule 27 (tipo -> STRING .)


state 103

    (28) tipo -> USIZE .

    PARDER          reduce using rule 28 (tipo -> USIZE .)


state 104

    (49) expresion -> F64 DDOSPT POWF PARIZQ . expresion COMA expresion PARDER
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 120
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 105

    (20) while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 20 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 20 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 20 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 20 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 20 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 20 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 20 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 20 (while -> WHILE expresion LLAVEIZQ instrucciones LLAVEDER .)


state 106

    (2) main -> FN MAIN PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 121
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 107

    (11) imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .

    FN              reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    PRINTLN         reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    IF              reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    $end            reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)
    LLAVEDER        reduce using rule 11 (imprimir -> PRINTLN NOT PARIZQ expresiones PARDER PTCOMA .)


state 108

    (29) expresiones -> expresiones COMA expresion .
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          reduce using rule 29 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 29 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 109

    (13) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .

    FN              reduce using rule 13 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    PRINTLN         reduce using rule 13 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    IF              reduce using rule 13 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    WHILE           reduce using rule 13 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    CONTINUE        reduce using rule 13 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    BREAK           reduce using rule 13 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    $end            reduce using rule 13 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)
    LLAVEDER        reduce using rule 13 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER else .)


state 110

    (14) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .
    (15) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif . else
    (16) lelseif -> lelseif . elseif
    (19) else -> . ELSE LLAVEIZQ instrucciones LLAVEDER
    (18) elseif -> . ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER

    FN              reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    PRINTLN         reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    IF              reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    WHILE           reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    CONTINUE        reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    BREAK           reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    $end            reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    LLAVEDER        reduce using rule 14 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif .)
    ELSE            shift and go to state 111

    else                           shift and go to state 122
    elseif                         shift and go to state 123

state 111

    (19) else -> ELSE . LLAVEIZQ instrucciones LLAVEDER
    (18) elseif -> ELSE . IF expresion LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 124
    IF              shift and go to state 125


state 112

    (17) lelseif -> elseif .

    ELSE            reduce using rule 17 (lelseif -> elseif .)
    FN              reduce using rule 17 (lelseif -> elseif .)
    PRINTLN         reduce using rule 17 (lelseif -> elseif .)
    IF              reduce using rule 17 (lelseif -> elseif .)
    WHILE           reduce using rule 17 (lelseif -> elseif .)
    CONTINUE        reduce using rule 17 (lelseif -> elseif .)
    BREAK           reduce using rule 17 (lelseif -> elseif .)
    $end            reduce using rule 17 (lelseif -> elseif .)
    LLAVEDER        reduce using rule 17 (lelseif -> elseif .)


state 113

    (37) tostring -> expresion PTO TOSTRING PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    IGUALQUE        reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENORQUE        reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAYORQUE        reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MENORIQUE       reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    PTO             reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    AS              reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 37 (tostring -> expresion PTO TOSTRING PARIZQ PARDER .)


state 114

    (38) toowned -> expresion PTO TOOWNED PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAS             reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENOS           reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    POR             reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MODULO          reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    IGUALQUE        reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENORQUE        reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAYORQUE        reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MENORIQUE       reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    OR              reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    AND             reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    PTO             reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    PARDER          reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    AS              reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)
    COMA            reduce using rule 38 (toowned -> expresion PTO TOOWNED PARIZQ PARDER .)


state 115

    (61) nativas_fun -> expresion PTO ABS PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAS             reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENOS           reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    POR             reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MODULO          reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    IGUALQUE        reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORQUE        reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORQUE        reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MENORIQUE       reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    OR              reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AND             reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PTO             reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    PARDER          reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    AS              reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)
    COMA            reduce using rule 61 (nativas_fun -> expresion PTO ABS PARIZQ PARDER .)


state 116

    (62) nativas_fun -> expresion PTO SQRT PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAS             reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENOS           reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    POR             reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MODULO          reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    IGUALQUE        reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORQUE        reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORQUE        reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MENORIQUE       reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    OR              reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AND             reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PTO             reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    PARDER          reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    AS              reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)
    COMA            reduce using rule 62 (nativas_fun -> expresion PTO SQRT PARIZQ PARDER .)


state 117

    (63) nativas_fun -> expresion PTO CLONE PARIZQ PARDER .

    LLAVEIZQ        reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAS             reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENOS           reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    POR             reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MODULO          reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    IGUALQUE        reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    NOIGUALQUE      reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORQUE        reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORQUE        reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MENORIQUE       reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    MAYORIQUE       reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    OR              reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AND             reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PTO             reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    PARDER          reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    AS              reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)
    COMA            reduce using rule 63 (nativas_fun -> expresion PTO CLONE PARIZQ PARDER .)


state 118

    (48) expresion -> I64 DDOSPT POW PARIZQ expresion . COMA expresion PARDER
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 126
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 119

    (59) expresion -> PARIZQ expresion AS tipo PARDER .

    LLAVEIZQ        reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAS             reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENOS           reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    POR             reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    DIVIDIDO        reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MODULO          reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    IGUALQUE        reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    NOIGUALQUE      reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORQUE        reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORQUE        reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MENORIQUE       reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    MAYORIQUE       reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    OR              reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AND             reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PTO             reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    PARDER          reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    AS              reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)
    COMA            reduce using rule 59 (expresion -> PARIZQ expresion AS tipo PARDER .)


state 120

    (49) expresion -> F64 DDOSPT POWF PARIZQ expresion . COMA expresion PARDER
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    COMA            shift and go to state 127
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 121

    (2) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

    LLAVEDER        shift and go to state 128
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

    instruccion                    shift and go to state 15
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 122

    (15) if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .

    FN              reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    PRINTLN         reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    IF              reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    WHILE           reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    CONTINUE        reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    BREAK           reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    $end            reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)
    LLAVEDER        reduce using rule 15 (if -> IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else .)


state 123

    (16) lelseif -> lelseif elseif .

    ELSE            reduce using rule 16 (lelseif -> lelseif elseif .)
    FN              reduce using rule 16 (lelseif -> lelseif elseif .)
    PRINTLN         reduce using rule 16 (lelseif -> lelseif elseif .)
    IF              reduce using rule 16 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 16 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 16 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 16 (lelseif -> lelseif elseif .)
    $end            reduce using rule 16 (lelseif -> lelseif elseif .)
    LLAVEDER        reduce using rule 16 (lelseif -> lelseif elseif .)


state 124

    (19) else -> ELSE LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 129
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 125

    (18) elseif -> ELSE IF . expresion LLAVEIZQ instrucciones LLAVEDER
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 130
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 126

    (48) expresion -> I64 DDOSPT POW PARIZQ expresion COMA . expresion PARDER
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 131
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 127

    (49) expresion -> F64 DDOSPT POWF PARIZQ expresion COMA . expresion PARDER
    (31) expresion -> . ENTERO
    (32) expresion -> . DECIMAL
    (33) expresion -> . TRUE
    (34) expresion -> . FALSE
    (35) expresion -> . tostring
    (36) expresion -> . toowned
    (39) expresion -> . CADENA
    (40) expresion -> . CARACTER
    (41) expresion -> . expresion MAS expresion
    (42) expresion -> . expresion MENOS expresion
    (43) expresion -> . expresion POR expresion
    (44) expresion -> . expresion DIVIDIDO expresion
    (45) expresion -> . expresion MODULO expresion
    (46) expresion -> . MENOS expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER
    (49) expresion -> . F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER
    (50) expresion -> . expresion IGUALQUE expresion
    (51) expresion -> . expresion NOIGUALQUE expresion
    (52) expresion -> . expresion MENORQUE expresion
    (53) expresion -> . expresion MAYORQUE expresion
    (54) expresion -> . expresion MENORIQUE expresion
    (55) expresion -> . expresion MAYORIQUE expresion
    (56) expresion -> . expresion OR expresion
    (57) expresion -> . expresion AND expresion
    (58) expresion -> . PARIZQ expresion PARDER
    (59) expresion -> . PARIZQ expresion AS tipo PARDER
    (60) expresion -> . nativas_fun
    (37) tostring -> . expresion PTO TOSTRING PARIZQ PARDER
    (38) toowned -> . expresion PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> . expresion PTO ABS PARIZQ PARDER
    (62) nativas_fun -> . expresion PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> . expresion PTO CLONE PARIZQ PARDER

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    CADENA          shift and go to state 25
    CARACTER        shift and go to state 26
    MENOS           shift and go to state 27
    NOT             shift and go to state 28
    I64             shift and go to state 29
    F64             shift and go to state 31
    PARIZQ          shift and go to state 30

    expresion                      shift and go to state 132
    tostring                       shift and go to state 23
    toowned                        shift and go to state 24
    nativas_fun                    shift and go to state 32

state 128

    (2) main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    PRINTLN         reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 2 (main -> FN MAIN PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 129

    (19) else -> ELSE LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

    LLAVEDER        shift and go to state 133
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

    instruccion                    shift and go to state 15
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 130

    (18) elseif -> ELSE IF expresion . LLAVEIZQ instrucciones LLAVEDER
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    LLAVEIZQ        shift and go to state 134
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 131

    (48) expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion . PARDER
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 135
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 132

    (49) expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion . PARDER
    (41) expresion -> expresion . MAS expresion
    (42) expresion -> expresion . MENOS expresion
    (43) expresion -> expresion . POR expresion
    (44) expresion -> expresion . DIVIDIDO expresion
    (45) expresion -> expresion . MODULO expresion
    (50) expresion -> expresion . IGUALQUE expresion
    (51) expresion -> expresion . NOIGUALQUE expresion
    (52) expresion -> expresion . MENORQUE expresion
    (53) expresion -> expresion . MAYORQUE expresion
    (54) expresion -> expresion . MENORIQUE expresion
    (55) expresion -> expresion . MAYORIQUE expresion
    (56) expresion -> expresion . OR expresion
    (57) expresion -> expresion . AND expresion
    (37) tostring -> expresion . PTO TOSTRING PARIZQ PARDER
    (38) toowned -> expresion . PTO TOOWNED PARIZQ PARDER
    (61) nativas_fun -> expresion . PTO ABS PARIZQ PARDER
    (62) nativas_fun -> expresion . PTO SQRT PARIZQ PARDER
    (63) nativas_fun -> expresion . PTO CLONE PARIZQ PARDER

    PARDER          shift and go to state 136
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    POR             shift and go to state 42
    DIVIDIDO        shift and go to state 43
    MODULO          shift and go to state 44
    IGUALQUE        shift and go to state 45
    NOIGUALQUE      shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48
    MENORIQUE       shift and go to state 49
    MAYORIQUE       shift and go to state 50
    OR              shift and go to state 51
    AND             shift and go to state 52
    PTO             shift and go to state 53


state 133

    (19) else -> ELSE LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 19 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 19 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 19 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 19 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 19 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 19 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 19 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 19 (else -> ELSE LLAVEIZQ instrucciones LLAVEDER .)


state 134

    (18) elseif -> ELSE IF expresion LLAVEIZQ . instrucciones LLAVEDER
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion
    (5) instrucciones -> .
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    LLAVEDER        reduce using rule 5 (instrucciones -> .)
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

  ! PRINTLN         [ reduce using rule 5 (instrucciones -> .) ]
  ! IF              [ reduce using rule 5 (instrucciones -> .) ]
  ! WHILE           [ reduce using rule 5 (instrucciones -> .) ]
  ! CONTINUE        [ reduce using rule 5 (instrucciones -> .) ]
  ! BREAK           [ reduce using rule 5 (instrucciones -> .) ]

    instrucciones                  shift and go to state 137
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 135

    (48) expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 48 (expresion -> I64 DDOSPT POW PARIZQ expresion COMA expresion PARDER .)


state 136

    (49) expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .

    LLAVEIZQ        reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    IGUALQUE        reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    NOIGUALQUE      reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORQUE        reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORQUE        reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MENORIQUE       reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    MAYORIQUE       reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PTO             reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    AS              reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 49 (expresion -> F64 DDOSPT POWF PARIZQ expresion COMA expresion PARDER .)


state 137

    (18) elseif -> ELSE IF expresion LLAVEIZQ instrucciones . LLAVEDER
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . imprimir
    (7) instruccion -> . if
    (8) instruccion -> . while
    (9) instruccion -> . continue
    (10) instruccion -> . break
    (11) imprimir -> . PRINTLN NOT PARIZQ expresiones PARDER PTCOMA
    (12) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER
    (13) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER else
    (14) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif
    (15) if -> . IF expresion LLAVEIZQ instrucciones LLAVEDER lelseif else
    (20) while -> . WHILE expresion LLAVEIZQ instrucciones LLAVEDER
    (22) continue -> . CONTINUE PTCOMA
    (21) break -> . BREAK PTCOMA

    LLAVEDER        shift and go to state 138
    PRINTLN         shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    CONTINUE        shift and go to state 12
    BREAK           shift and go to state 13

    instruccion                    shift and go to state 15
    imprimir                       shift and go to state 4
    if                             shift and go to state 5
    while                          shift and go to state 6
    continue                       shift and go to state 7
    break                          shift and go to state 8

state 138

    (18) elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .

    ELSE            reduce using rule 18 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    FN              reduce using rule 18 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 18 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 18 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 18 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 18 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 18 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 18 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 18 (elseif -> ELSE IF expresion LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 0 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 14 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 14 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 39 resolved as shift
WARNING: shift/reduce conflict for IF in state 39 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 39 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 39 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 39 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 59 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 59 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 106 resolved as shift
WARNING: shift/reduce conflict for IF in state 106 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 106 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 106 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 106 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 124 resolved as shift
WARNING: shift/reduce conflict for IF in state 124 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 124 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 124 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 124 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 134 resolved as shift
WARNING: shift/reduce conflict for IF in state 134 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 134 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 134 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 134 resolved as shift
